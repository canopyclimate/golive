{
  "version": 3,
  "sources": ["../../../../node_modules/nprogress/nprogress.js", "../../src/client/index.ts", "../../../../node_modules/phoenix/assets/js/phoenix/utils.js", "../../../../node_modules/phoenix/assets/js/phoenix/constants.js", "../../../../node_modules/phoenix/assets/js/phoenix/push.js", "../../../../node_modules/phoenix/assets/js/phoenix/timer.js", "../../../../node_modules/phoenix/assets/js/phoenix/channel.js", "../../../../node_modules/phoenix/assets/js/phoenix/ajax.js", "../../../../node_modules/phoenix/assets/js/phoenix/longpoll.js", "../../../../node_modules/phoenix/assets/js/phoenix/presence.js", "../../../../node_modules/phoenix/assets/js/phoenix/serializer.js", "../../../../node_modules/phoenix/assets/js/phoenix/socket.js", "../../../../node_modules/phoenix_html/priv/static/phoenix_html.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/constants.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/entry_uploader.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/utils.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/browser.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/dom.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/upload_entry.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/live_uploader.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/aria.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/hooks.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/dom_post_morph_restorer.js", "../../../../node_modules/phoenix_live_view/assets/node_modules/morphdom/dist/morphdom-esm.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/dom_patch.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/rendered.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/view_hook.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/js.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/view.js", "../../../../node_modules/phoenix_live_view/assets/js/phoenix_live_view/live_socket.js"],
  "sourcesContent": ["/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\n * @license MIT */\n\n;(function(root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.NProgress = factory();\n  }\n\n})(this, function() {\n  var NProgress = {};\n\n  NProgress.version = '0.2.0';\n\n  var Settings = NProgress.settings = {\n    minimum: 0.08,\n    easing: 'ease',\n    positionUsing: '',\n    speed: 200,\n    trickle: true,\n    trickleRate: 0.02,\n    trickleSpeed: 800,\n    showSpinner: true,\n    barSelector: '[role=\"bar\"]',\n    spinnerSelector: '[role=\"spinner\"]',\n    parent: 'body',\n    template: '<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div><div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>'\n  };\n\n  /**\n   * Updates configuration.\n   *\n   *     NProgress.configure({\n   *       minimum: 0.1\n   *     });\n   */\n  NProgress.configure = function(options) {\n    var key, value;\n    for (key in options) {\n      value = options[key];\n      if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\n    }\n\n    return this;\n  };\n\n  /**\n   * Last number.\n   */\n\n  NProgress.status = null;\n\n  /**\n   * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\n   *\n   *     NProgress.set(0.4);\n   *     NProgress.set(1.0);\n   */\n\n  NProgress.set = function(n) {\n    var started = NProgress.isStarted();\n\n    n = clamp(n, Settings.minimum, 1);\n    NProgress.status = (n === 1 ? null : n);\n\n    var progress = NProgress.render(!started),\n        bar      = progress.querySelector(Settings.barSelector),\n        speed    = Settings.speed,\n        ease     = Settings.easing;\n\n    progress.offsetWidth; /* Repaint */\n\n    queue(function(next) {\n      // Set positionUsing if it hasn't already been set\n      if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\n\n      // Add transition\n      css(bar, barPositionCSS(n, speed, ease));\n\n      if (n === 1) {\n        // Fade out\n        css(progress, { \n          transition: 'none', \n          opacity: 1 \n        });\n        progress.offsetWidth; /* Repaint */\n\n        setTimeout(function() {\n          css(progress, { \n            transition: 'all ' + speed + 'ms linear', \n            opacity: 0 \n          });\n          setTimeout(function() {\n            NProgress.remove();\n            next();\n          }, speed);\n        }, speed);\n      } else {\n        setTimeout(next, speed);\n      }\n    });\n\n    return this;\n  };\n\n  NProgress.isStarted = function() {\n    return typeof NProgress.status === 'number';\n  };\n\n  /**\n   * Shows the progress bar.\n   * This is the same as setting the status to 0%, except that it doesn't go backwards.\n   *\n   *     NProgress.start();\n   *\n   */\n  NProgress.start = function() {\n    if (!NProgress.status) NProgress.set(0);\n\n    var work = function() {\n      setTimeout(function() {\n        if (!NProgress.status) return;\n        NProgress.trickle();\n        work();\n      }, Settings.trickleSpeed);\n    };\n\n    if (Settings.trickle) work();\n\n    return this;\n  };\n\n  /**\n   * Hides the progress bar.\n   * This is the *sort of* the same as setting the status to 100%, with the\n   * difference being `done()` makes some placebo effect of some realistic motion.\n   *\n   *     NProgress.done();\n   *\n   * If `true` is passed, it will show the progress bar even if its hidden.\n   *\n   *     NProgress.done(true);\n   */\n\n  NProgress.done = function(force) {\n    if (!force && !NProgress.status) return this;\n\n    return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\n  };\n\n  /**\n   * Increments by a random amount.\n   */\n\n  NProgress.inc = function(amount) {\n    var n = NProgress.status;\n\n    if (!n) {\n      return NProgress.start();\n    } else {\n      if (typeof amount !== 'number') {\n        amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\n      }\n\n      n = clamp(n + amount, 0, 0.994);\n      return NProgress.set(n);\n    }\n  };\n\n  NProgress.trickle = function() {\n    return NProgress.inc(Math.random() * Settings.trickleRate);\n  };\n\n  /**\n   * Waits for all supplied jQuery promises and\n   * increases the progress as the promises resolve.\n   *\n   * @param $promise jQUery Promise\n   */\n  (function() {\n    var initial = 0, current = 0;\n\n    NProgress.promise = function($promise) {\n      if (!$promise || $promise.state() === \"resolved\") {\n        return this;\n      }\n\n      if (current === 0) {\n        NProgress.start();\n      }\n\n      initial++;\n      current++;\n\n      $promise.always(function() {\n        current--;\n        if (current === 0) {\n            initial = 0;\n            NProgress.done();\n        } else {\n            NProgress.set((initial - current) / initial);\n        }\n      });\n\n      return this;\n    };\n\n  })();\n\n  /**\n   * (Internal) renders the progress bar markup based on the `template`\n   * setting.\n   */\n\n  NProgress.render = function(fromStart) {\n    if (NProgress.isRendered()) return document.getElementById('nprogress');\n\n    addClass(document.documentElement, 'nprogress-busy');\n    \n    var progress = document.createElement('div');\n    progress.id = 'nprogress';\n    progress.innerHTML = Settings.template;\n\n    var bar      = progress.querySelector(Settings.barSelector),\n        perc     = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\n        parent   = document.querySelector(Settings.parent),\n        spinner;\n    \n    css(bar, {\n      transition: 'all 0 linear',\n      transform: 'translate3d(' + perc + '%,0,0)'\n    });\n\n    if (!Settings.showSpinner) {\n      spinner = progress.querySelector(Settings.spinnerSelector);\n      spinner && removeElement(spinner);\n    }\n\n    if (parent != document.body) {\n      addClass(parent, 'nprogress-custom-parent');\n    }\n\n    parent.appendChild(progress);\n    return progress;\n  };\n\n  /**\n   * Removes the element. Opposite of render().\n   */\n\n  NProgress.remove = function() {\n    removeClass(document.documentElement, 'nprogress-busy');\n    removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\n    var progress = document.getElementById('nprogress');\n    progress && removeElement(progress);\n  };\n\n  /**\n   * Checks if the progress bar is rendered.\n   */\n\n  NProgress.isRendered = function() {\n    return !!document.getElementById('nprogress');\n  };\n\n  /**\n   * Determine which positioning CSS rule to use.\n   */\n\n  NProgress.getPositioningCSS = function() {\n    // Sniff on document.body.style\n    var bodyStyle = document.body.style;\n\n    // Sniff prefixes\n    var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\n                       ('MozTransform' in bodyStyle) ? 'Moz' :\n                       ('msTransform' in bodyStyle) ? 'ms' :\n                       ('OTransform' in bodyStyle) ? 'O' : '';\n\n    if (vendorPrefix + 'Perspective' in bodyStyle) {\n      // Modern browsers with 3D support, e.g. Webkit, IE10\n      return 'translate3d';\n    } else if (vendorPrefix + 'Transform' in bodyStyle) {\n      // Browsers without 3D support, e.g. IE9\n      return 'translate';\n    } else {\n      // Browsers without translate() support, e.g. IE7-8\n      return 'margin';\n    }\n  };\n\n  /**\n   * Helpers\n   */\n\n  function clamp(n, min, max) {\n    if (n < min) return min;\n    if (n > max) return max;\n    return n;\n  }\n\n  /**\n   * (Internal) converts a percentage (`0..1`) to a bar translateX\n   * percentage (`-100%..0%`).\n   */\n\n  function toBarPerc(n) {\n    return (-1 + n) * 100;\n  }\n\n\n  /**\n   * (Internal) returns the correct CSS for changing the bar's\n   * position given an n percentage, and speed and ease from Settings\n   */\n\n  function barPositionCSS(n, speed, ease) {\n    var barCSS;\n\n    if (Settings.positionUsing === 'translate3d') {\n      barCSS = { transform: 'translate3d('+toBarPerc(n)+'%,0,0)' };\n    } else if (Settings.positionUsing === 'translate') {\n      barCSS = { transform: 'translate('+toBarPerc(n)+'%,0)' };\n    } else {\n      barCSS = { 'margin-left': toBarPerc(n)+'%' };\n    }\n\n    barCSS.transition = 'all '+speed+'ms '+ease;\n\n    return barCSS;\n  }\n\n  /**\n   * (Internal) Queues a function to be executed.\n   */\n\n  var queue = (function() {\n    var pending = [];\n    \n    function next() {\n      var fn = pending.shift();\n      if (fn) {\n        fn(next);\n      }\n    }\n\n    return function(fn) {\n      pending.push(fn);\n      if (pending.length == 1) next();\n    };\n  })();\n\n  /**\n   * (Internal) Applies css properties to an element, similar to the jQuery \n   * css method.\n   *\n   * While this helper does assist with vendor prefixed property names, it \n   * does not perform any manipulation of values prior to setting styles.\n   */\n\n  var css = (function() {\n    var cssPrefixes = [ 'Webkit', 'O', 'Moz', 'ms' ],\n        cssProps    = {};\n\n    function camelCase(string) {\n      return string.replace(/^-ms-/, 'ms-').replace(/-([\\da-z])/gi, function(match, letter) {\n        return letter.toUpperCase();\n      });\n    }\n\n    function getVendorProp(name) {\n      var style = document.body.style;\n      if (name in style) return name;\n\n      var i = cssPrefixes.length,\n          capName = name.charAt(0).toUpperCase() + name.slice(1),\n          vendorName;\n      while (i--) {\n        vendorName = cssPrefixes[i] + capName;\n        if (vendorName in style) return vendorName;\n      }\n\n      return name;\n    }\n\n    function getStyleProp(name) {\n      name = camelCase(name);\n      return cssProps[name] || (cssProps[name] = getVendorProp(name));\n    }\n\n    function applyCss(element, prop, value) {\n      prop = getStyleProp(prop);\n      element.style[prop] = value;\n    }\n\n    return function(element, properties) {\n      var args = arguments,\n          prop, \n          value;\n\n      if (args.length == 2) {\n        for (prop in properties) {\n          value = properties[prop];\n          if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\n        }\n      } else {\n        applyCss(element, args[1], args[2]);\n      }\n    }\n  })();\n\n  /**\n   * (Internal) Determines if an element or space separated list of class names contains a class name.\n   */\n\n  function hasClass(element, name) {\n    var list = typeof element == 'string' ? element : classList(element);\n    return list.indexOf(' ' + name + ' ') >= 0;\n  }\n\n  /**\n   * (Internal) Adds a class to an element.\n   */\n\n  function addClass(element, name) {\n    var oldList = classList(element),\n        newList = oldList + name;\n\n    if (hasClass(oldList, name)) return; \n\n    // Trim the opening space.\n    element.className = newList.substring(1);\n  }\n\n  /**\n   * (Internal) Removes a class from an element.\n   */\n\n  function removeClass(element, name) {\n    var oldList = classList(element),\n        newList;\n\n    if (!hasClass(element, name)) return;\n\n    // Replace the class name.\n    newList = oldList.replace(' ' + name + ' ', ' ');\n\n    // Trim the opening and closing spaces.\n    element.className = newList.substring(1, newList.length - 1);\n  }\n\n  /**\n   * (Internal) Gets a space separated list of the class names on the element. \n   * The list is wrapped with a single space on each end to facilitate finding \n   * matches within the list.\n   */\n\n  function classList(element) {\n    return (' ' + (element.className || '') + ' ').replace(/\\s+/gi, ' ');\n  }\n\n  /**\n   * (Internal) Removes an element from the DOM.\n   */\n\n  function removeElement(element) {\n    element && element.parentNode && element.parentNode.removeChild(element);\n  }\n\n  return NProgress;\n});\n\n", "import NProgress from \"nprogress\";\nimport { Socket } from \"phoenix\";\nimport \"phoenix_html\";\nimport { LiveSocket, ViewHook } from \"phoenix_live_view\";\n\n/**\n * Define custom LiveView Hooks that can tap into browser events.\n * See: https://hexdocs.pm/phoenix_live_view/js-interop.html#client-hooks-via-phx-hook\n */\nlet Hooks = {\n  /**\n   * This hook can be used by an input element to prevent input other than numbers.\n   * e.g. <input type=\"text\" phx-hook=\"NumberInput\" />\n   */\n  NumberInput: {\n    mounted() {\n      this.el.addEventListener(\"input\", () => {\n        // replace all non-numeric characters with empty string\n        this.el.value = this.el.value.replace(/\\D/g, \"\");\n      });\n    },\n  } as ViewHook,\n};\n\nconst url = \"/live\";\nlet csrfToken = document.querySelector(\"meta[name='csrf-token']\")?.getAttribute(\"content\");\nlet liveSocket = new LiveSocket(url, Socket, { params: { _csrf_token: csrfToken }, hooks: Hooks });\n\n// Show progress bar on live navigation and form submits\nwindow.addEventListener(\"phx:page-loading-start\", (info) => NProgress.start());\nwindow.addEventListener(\"phx:page-loading-stop\", (info) => NProgress.done());\n\n// connect if there are any LiveViews on the page\nliveSocket.connect();\n\n// expose liveSocket on window for web console debug logs and latency simulation:\n// liveSocket.enableDebug();\n// liveSocket.enableLatencySim(1000)\n(window as any).liveSocket = liveSocket;\n", "// wraps value in closure or returns closure\nexport let closure = (value) => {\n  if(typeof value === \"function\"){\n    return value\n  } else {\n    let closure = function (){ return value }\n    return closure\n  }\n}\n", "export const globalSelf = typeof self !== \"undefined\" ? self : null\nexport const phxWindow = typeof window !== \"undefined\" ? window : null\nexport const global = globalSelf || phxWindow || global\nexport const DEFAULT_VSN = \"2.0.0\"\nexport const SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\nexport const DEFAULT_TIMEOUT = 10000\nexport const WS_CLOSE_NORMAL = 1000\nexport const CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\",\n}\nexport const CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n}\n\nexport const TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n}\nexport const XHR_STATES = {\n  complete: 4\n}\n", "/**\n * Initializes the Push\n * @param {Channel} channel - The Channel\n * @param {string} event - The event, for example `\"phx_join\"`\n * @param {Object} payload - The payload, for example `{user_id: 123}`\n * @param {number} timeout - The push timeout in milliseconds\n */\nexport default class Push {\n  constructor(channel, event, payload, timeout){\n    this.channel = channel\n    this.event = event\n    this.payload = payload || function (){ return {} }\n    this.receivedResp = null\n    this.timeout = timeout\n    this.timeoutTimer = null\n    this.recHooks = []\n    this.sent = false\n  }\n\n  /**\n   *\n   * @param {number} timeout\n   */\n  resend(timeout){\n    this.timeout = timeout\n    this.reset()\n    this.send()\n  }\n\n  /**\n   *\n   */\n  send(){\n    if(this.hasReceived(\"timeout\")){ return }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload(),\n      ref: this.ref,\n      join_ref: this.channel.joinRef()\n    })\n  }\n\n  /**\n   *\n   * @param {*} status\n   * @param {*} callback\n   */\n  receive(status, callback){\n    if(this.hasReceived(status)){\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({status, callback})\n    return this\n  }\n\n  /**\n   * @private\n   */\n  reset(){\n    this.cancelRefEvent()\n    this.ref = null\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n  }\n\n  /**\n   * @private\n   */\n  matchReceive({status, response, _ref}){\n    this.recHooks.filter(h => h.status === status)\n      .forEach(h => h.callback(response))\n  }\n\n  /**\n   * @private\n   */\n  cancelRefEvent(){\n    if(!this.refEvent){ return }\n    this.channel.off(this.refEvent)\n  }\n\n  /**\n   * @private\n   */\n  cancelTimeout(){\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  /**\n   * @private\n   */\n  startTimeout(){\n    if(this.timeoutTimer){ this.cancelTimeout() }\n    this.ref = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, payload => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {})\n    }, this.timeout)\n  }\n\n  /**\n   * @private\n   */\n  hasReceived(status){\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  /**\n   * @private\n   */\n  trigger(status, response){\n    this.channel.trigger(this.refEvent, {status, response})\n  }\n}\n", "/**\n *\n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * @example\n * let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *   return [1000, 5000, 10000][tries - 1] || 10000\n * })\n * reconnectTimer.scheduleTimeout() // fires after 1000\n * reconnectTimer.scheduleTimeout() // fires after 5000\n * reconnectTimer.reset()\n * reconnectTimer.scheduleTimeout() // fires after 1000\n *\n * @param {Function} callback\n * @param {Function} timerCalc\n */\nexport default class Timer {\n  constructor(callback, timerCalc){\n    this.callback = callback\n    this.timerCalc = timerCalc\n    this.timer = null\n    this.tries = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  /**\n   * Cancels any previous scheduleTimeout and schedules callback\n   */\n  scheduleTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n", "import {closure} from \"./utils\"\nimport {\n  CHANNEL_EVENTS,\n  CHANNEL_STATES,\n} from \"./constants\"\n\nimport Push from \"./push\"\nimport Timer from \"./timer\"\n\n/**\n *\n * @param {string} topic\n * @param {(Object|function)} params\n * @param {Socket} socket\n */\nexport default class Channel {\n  constructor(topic, params, socket){\n    this.state = CHANNEL_STATES.closed\n    this.topic = topic\n    this.params = closure(params || {})\n    this.socket = socket\n    this.bindings = []\n    this.bindingRef = 0\n    this.timeout = this.socket.timeout\n    this.joinedOnce = false\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer = []\n    this.stateChangeRefs = []\n\n    this.rejoinTimer = new Timer(() => {\n      if(this.socket.isConnected()){ this.rejoin() }\n    }, this.socket.rejoinAfterMs)\n    this.stateChangeRefs.push(this.socket.onError(() => this.rejoinTimer.reset()))\n    this.stateChangeRefs.push(this.socket.onOpen(() => {\n      this.rejoinTimer.reset()\n      if(this.isErrored()){ this.rejoin() }\n    })\n    )\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach(pushEvent => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this.joinPush.receive(\"error\", () => {\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.onClose(() => {\n      this.rejoinTimer.reset()\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError(reason => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `error ${this.topic}`, reason)\n      if(this.isJoining()){ this.joinPush.reset() }\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.joinPush.receive(\"timeout\", () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `timeout ${this.topic} (${this.joinRef()})`, this.joinPush.timeout)\n      let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), this.timeout)\n      leavePush.send()\n      this.state = CHANNEL_STATES.errored\n      this.joinPush.reset()\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  /**\n   * Join the channel\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  join(timeout = this.timeout){\n    if(this.joinedOnce){\n      throw new Error(\"tried to join multiple times. 'join' can only be called a single time per channel instance\")\n    } else {\n      this.timeout = timeout\n      this.joinedOnce = true\n      this.rejoin()\n      return this.joinPush\n    }\n  }\n\n  /**\n   * Hook into channel close\n   * @param {Function} callback\n   */\n  onClose(callback){\n    this.on(CHANNEL_EVENTS.close, callback)\n  }\n\n  /**\n   * Hook into channel errors\n   * @param {Function} callback\n   */\n  onError(callback){\n    return this.on(CHANNEL_EVENTS.error, reason => callback(reason))\n  }\n\n  /**\n   * Subscribes on channel events\n   *\n   * Subscription returns a ref counter, which can be used later to\n   * unsubscribe the exact event listener\n   *\n   * @example\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * const ref2 = channel.on(\"event\", do_other_stuff)\n   * channel.off(\"event\", ref1)\n   * // Since unsubscription, do_stuff won't fire,\n   * // while do_other_stuff will keep firing on the \"event\"\n   *\n   * @param {string} event\n   * @param {Function} callback\n   * @returns {integer} ref\n   */\n  on(event, callback){\n    let ref = this.bindingRef++\n    this.bindings.push({event, ref, callback})\n    return ref\n  }\n\n  /**\n   * Unsubscribes off of channel events\n   *\n   * Use the ref returned from a channel.on() to unsubscribe one\n   * handler, or pass nothing for the ref to unsubscribe all\n   * handlers for the given event.\n   *\n   * @example\n   * // Unsubscribe the do_stuff handler\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * channel.off(\"event\", ref1)\n   *\n   * // Unsubscribe all handlers from event\n   * channel.off(\"event\")\n   *\n   * @param {string} event\n   * @param {integer} ref\n   */\n  off(event, ref){\n    this.bindings = this.bindings.filter((bind) => {\n      return !(bind.event === event && (typeof ref === \"undefined\" || ref === bind.ref))\n    })\n  }\n\n  /**\n   * @private\n   */\n  canPush(){ return this.socket.isConnected() && this.isJoined() }\n\n  /**\n   * Sends a message `event` to phoenix with the payload `payload`.\n   * Phoenix receives this in the `handle_in(event, payload, socket)`\n   * function. if phoenix replies or it times out (default 10000ms),\n   * then optionally the reply can be received.\n   *\n   * @example\n   * channel.push(\"event\")\n   *   .receive(\"ok\", payload => console.log(\"phoenix replied:\", payload))\n   *   .receive(\"error\", err => console.log(\"phoenix errored\", err))\n   *   .receive(\"timeout\", () => console.log(\"timed out pushing\"))\n   * @param {string} event\n   * @param {Object} payload\n   * @param {number} [timeout]\n   * @returns {Push}\n   */\n  push(event, payload, timeout = this.timeout){\n    payload = payload || {}\n    if(!this.joinedOnce){\n      throw new Error(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\n    }\n    let pushEvent = new Push(this, event, function (){ return payload }, timeout)\n    if(this.canPush()){\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /** Leaves the channel\n   *\n   * Unsubscribes from server events, and\n   * instructs channel to terminate on server\n   *\n   * Triggers onClose() hooks\n   *\n   * To receive leave acknowledgements, use the `receive`\n   * hook to bind to the server ack, ie:\n   *\n   * @example\n   * channel.leave().receive(\"ok\", () => alert(\"left!\") )\n   *\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  leave(timeout = this.timeout){\n    this.rejoinTimer.reset()\n    this.joinPush.cancelTimeout()\n\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), timeout)\n    leavePush.receive(\"ok\", () => onClose())\n      .receive(\"timeout\", () => onClose())\n    leavePush.send()\n    if(!this.canPush()){ leavePush.trigger(\"ok\", {}) }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling\n   * before dispatching to the channel callbacks.\n   *\n   * Must return the payload, modified or unmodified\n   * @param {string} event\n   * @param {Object} payload\n   * @param {integer} ref\n   * @returns {Object}\n   */\n  onMessage(_event, payload, _ref){ return payload }\n\n  /**\n   * @private\n   */\n  isMember(topic, event, payload, joinRef){\n    if(this.topic !== topic){ return false }\n\n    if(joinRef && joinRef !== this.joinRef()){\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", \"dropping outdated message\", {topic, event, payload, joinRef})\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * @private\n   */\n  joinRef(){ return this.joinPush.ref }\n\n  /**\n   * @private\n   */\n  rejoin(timeout = this.timeout){\n    if(this.isLeaving()){ return }\n    this.socket.leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /**\n   * @private\n   */\n  trigger(event, payload, ref, joinRef){\n    let handledPayload = this.onMessage(event, payload, ref, joinRef)\n    if(payload && !handledPayload){ throw new Error(\"channel onMessage callbacks must return the payload, modified or unmodified\") }\n\n    let eventBindings = this.bindings.filter(bind => bind.event === event)\n\n    for(let i = 0; i < eventBindings.length; i++){\n      let bind = eventBindings[i]\n      bind.callback(handledPayload, ref, joinRef || this.joinRef())\n    }\n  }\n\n  /**\n   * @private\n   */\n  replyEventName(ref){ return `chan_reply_${ref}` }\n\n  /**\n   * @private\n   */\n  isClosed(){ return this.state === CHANNEL_STATES.closed }\n\n  /**\n   * @private\n   */\n  isErrored(){ return this.state === CHANNEL_STATES.errored }\n\n  /**\n   * @private\n   */\n  isJoined(){ return this.state === CHANNEL_STATES.joined }\n\n  /**\n   * @private\n   */\n  isJoining(){ return this.state === CHANNEL_STATES.joining }\n\n  /**\n   * @private\n   */\n  isLeaving(){ return this.state === CHANNEL_STATES.leaving }\n}\n", "import {\n  global,\n  XHR_STATES\n} from \"./constants\"\n\nexport default class Ajax {\n\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\n    if(global.XDomainRequest){\n      let req = new global.XDomainRequest() // IE8, IE9\n      return this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else {\n      let req = new global.XMLHttpRequest() // IE7+, Firefox, Chrome, Opera, Safari\n      return this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\n    }\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => { }\n\n    req.send(body)\n    return req\n  }\n\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\n    req.open(method, endPoint, true)\n    req.timeout = timeout\n    req.setRequestHeader(\"Content-Type\", accept)\n    req.onerror = () => callback && callback(null)\n    req.onreadystatechange = () => {\n      if(req.readyState === XHR_STATES.complete && callback){\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    req.send(body)\n    return req\n  }\n\n  static parseJSON(resp){\n    if(!resp || resp === \"\"){ return null }\n\n    try {\n      return JSON.parse(resp)\n    } catch (e){\n      console && console.log(\"failed to parse JSON response\", resp)\n      return null\n    }\n  }\n\n  static serialize(obj, parentKey){\n    let queryStr = []\n    for(var key in obj){\n      if(!Object.prototype.hasOwnProperty.call(obj, key)){ continue }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if(typeof paramVal === \"object\"){\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join(\"&\")\n  }\n\n  static appendParams(url, params){\n    if(Object.keys(params).length === 0){ return url }\n\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n", "import {\n  SOCKET_STATES,\n  TRANSPORTS\n} from \"./constants\"\n\nimport Ajax from \"./ajax\"\n\nexport default class LongPoll {\n\n  constructor(endPoint){\n    this.endPoint = null\n    this.token = null\n    this.skipHeartbeat = true\n    this.reqs = new Set()\n    this.onopen = function (){ } // noop\n    this.onerror = function (){ } // noop\n    this.onmessage = function (){ } // noop\n    this.onclose = function (){ } // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint)\n    this.readyState = SOCKET_STATES.connecting\n    this.poll()\n  }\n\n  normalizeEndpoint(endPoint){\n    return (endPoint\n      .replace(\"ws://\", \"http://\")\n      .replace(\"wss://\", \"https://\")\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\n  }\n\n  endpointURL(){\n    return Ajax.appendParams(this.pollEndpoint, {token: this.token})\n  }\n\n  closeAndRetry(code, reason, wasClean){\n    this.close(code, reason, wasClean)\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout(){\n    this.onerror(\"timeout\")\n    this.closeAndRetry(1005, \"timeout\", false)\n  }\n\n  isActive(){ return this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting }\n\n  poll(){\n    this.ajax(\"GET\", null, () => this.ontimeout(), resp => {\n      if(resp){\n        var {status, token, messages} = resp\n        this.token = token\n      } else {\n        status = 0\n      }\n\n      switch(status){\n        case 200:\n          messages.forEach(msg => {\n            // Tasks are what things like event handlers, setTimeout callbacks,\n            // promise resolves and more are run within.\n            // In modern browsers, there are two different kinds of tasks,\n            // microtasks and macrotasks.\n            // Microtasks are mainly used for Promises, while macrotasks are\n            // used for everything else.\n            // Microtasks always have priority over macrotasks. If the JS engine\n            // is looking for a task to run, it will always try to empty the\n            // microtask queue before attempting to run anything from the\n            // macrotask queue.\n            //\n            // For the WebSocket transport, messages always arrive in their own\n            // event. This means that if any promises are resolved from within,\n            // their callbacks will always finish execution by the time the\n            // next message event handler is run.\n            //\n            // In order to emulate this behaviour, we need to make sure each\n            // onmessage handler is run within it's own macrotask.\n            setTimeout(() => this.onmessage({data: msg}), 0)\n          })\n          this.poll()\n          break\n        case 204:\n          this.poll()\n          break\n        case 410:\n          this.readyState = SOCKET_STATES.open\n          this.onopen({})\n          this.poll()\n          break\n        case 403:\n          this.onerror(403)\n          this.close(1008, \"forbidden\", false)\n          break\n        case 0:\n        case 500:\n          this.onerror(500)\n          this.closeAndRetry(1011, \"internal server error\", 500)\n          break\n        default: throw new Error(`unhandled poll status ${status}`)\n      }\n    })\n  }\n\n  send(body){\n    this.ajax(\"POST\", body, () => this.onerror(\"timeout\"), resp => {\n      if(!resp || resp.status !== 200){\n        this.onerror(resp && resp.status)\n        this.closeAndRetry(1011, \"internal server error\", false)\n      }\n    })\n  }\n\n  close(code, reason, wasClean){\n    for(let req of this.reqs){ req.abort() }\n    this.readyState = SOCKET_STATES.closed\n    let opts = Object.assign({code: 1000, reason: undefined, wasClean: true}, {code, reason, wasClean})\n    if(typeof(CloseEvent) !== \"undefined\"){\n      this.onclose(new CloseEvent(\"close\", opts))\n    } else {\n      this.onclose(opts)\n    }\n  }\n\n  ajax(method, body, onCallerTimeout, callback){\n    let req\n    let ontimeout = () => {\n      this.reqs.delete(req)\n      onCallerTimeout()\n    }\n    req = Ajax.request(method, this.endpointURL(), \"application/json\", body, this.timeout, ontimeout, resp => {\n      this.reqs.delete(req)\n      if(this.isActive()){ callback(resp) }\n    })\n    this.reqs.add(req)\n  }\n}\n", "/**\n * Initializes the Presence\n * @param {Channel} channel - The Channel\n * @param {Object} opts - The options,\n *        for example `{events: {state: \"state\", diff: \"diff\"}}`\n */\nexport default class Presence {\n\n  constructor(channel, opts = {}){\n    let events = opts.events || {state: \"presence_state\", diff: \"presence_diff\"}\n    this.state = {}\n    this.pendingDiffs = []\n    this.channel = channel\n    this.joinRef = null\n    this.caller = {\n      onJoin: function (){ },\n      onLeave: function (){ },\n      onSync: function (){ }\n    }\n\n    this.channel.on(events.state, newState => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      this.joinRef = this.channel.joinRef()\n      this.state = Presence.syncState(this.state, newState, onJoin, onLeave)\n\n      this.pendingDiffs.forEach(diff => {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n      })\n      this.pendingDiffs = []\n      onSync()\n    })\n\n    this.channel.on(events.diff, diff => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      if(this.inPendingSyncState()){\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n        onSync()\n      }\n    })\n  }\n\n  onJoin(callback){ this.caller.onJoin = callback }\n\n  onLeave(callback){ this.caller.onLeave = callback }\n\n  onSync(callback){ this.caller.onSync = callback }\n\n  list(by){ return Presence.list(this.state, by) }\n\n  inPendingSyncState(){\n    return !this.joinRef || (this.joinRef !== this.channel.joinRef())\n  }\n\n  // lower-level public static API\n\n  /**\n   * Used to sync the list of presences on the server\n   * with the client's state. An optional `onJoin` and `onLeave` callback can\n   * be provided to react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @returns {Presence}\n   */\n  static syncState(currentState, newState, onJoin, onLeave){\n    let state = this.clone(currentState)\n    let joins = {}\n    let leaves = {}\n\n    this.map(state, (key, presence) => {\n      if(!newState[key]){\n        leaves[key] = presence\n      }\n    })\n    this.map(newState, (key, newPresence) => {\n      let currentPresence = state[key]\n      if(currentPresence){\n        let newRefs = newPresence.metas.map(m => m.phx_ref)\n        let curRefs = currentPresence.metas.map(m => m.phx_ref)\n        let joinedMetas = newPresence.metas.filter(m => curRefs.indexOf(m.phx_ref) < 0)\n        let leftMetas = currentPresence.metas.filter(m => newRefs.indexOf(m.phx_ref) < 0)\n        if(joinedMetas.length > 0){\n          joins[key] = newPresence\n          joins[key].metas = joinedMetas\n        }\n        if(leftMetas.length > 0){\n          leaves[key] = this.clone(currentPresence)\n          leaves[key].metas = leftMetas\n        }\n      } else {\n        joins[key] = newPresence\n      }\n    })\n    return this.syncDiff(state, {joins: joins, leaves: leaves}, onJoin, onLeave)\n  }\n\n  /**\n   *\n   * Used to sync a diff of presence join and leave\n   * events from the server, as they happen. Like `syncState`, `syncDiff`\n   * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n   * joining or leaving from a device.\n   *\n   * @returns {Presence}\n   */\n  static syncDiff(state, diff, onJoin, onLeave){\n    let {joins, leaves} = this.clone(diff)\n    if(!onJoin){ onJoin = function (){ } }\n    if(!onLeave){ onLeave = function (){ } }\n\n    this.map(joins, (key, newPresence) => {\n      let currentPresence = state[key]\n      state[key] = this.clone(newPresence)\n      if(currentPresence){\n        let joinedRefs = state[key].metas.map(m => m.phx_ref)\n        let curMetas = currentPresence.metas.filter(m => joinedRefs.indexOf(m.phx_ref) < 0)\n        state[key].metas.unshift(...curMetas)\n      }\n      onJoin(key, currentPresence, newPresence)\n    })\n    this.map(leaves, (key, leftPresence) => {\n      let currentPresence = state[key]\n      if(!currentPresence){ return }\n      let refsToRemove = leftPresence.metas.map(m => m.phx_ref)\n      currentPresence.metas = currentPresence.metas.filter(p => {\n        return refsToRemove.indexOf(p.phx_ref) < 0\n      })\n      onLeave(key, currentPresence, leftPresence)\n      if(currentPresence.metas.length === 0){\n        delete state[key]\n      }\n    })\n    return state\n  }\n\n  /**\n   * Returns the array of presences, with selected metadata.\n   *\n   * @param {Object} presences\n   * @param {Function} chooser\n   *\n   * @returns {Presence}\n   */\n  static list(presences, chooser){\n    if(!chooser){ chooser = function (key, pres){ return pres } }\n\n    return this.map(presences, (key, presence) => {\n      return chooser(key, presence)\n    })\n  }\n\n  // private\n\n  static map(obj, func){\n    return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]))\n  }\n\n  static clone(obj){ return JSON.parse(JSON.stringify(obj)) }\n}\n", "/* The default serializer for encoding and decoding messages */\nimport {\n  CHANNEL_EVENTS\n} from \"./constants\"\n\nexport default {\n  HEADER_LENGTH: 1,\n  META_LENGTH: 4,\n  KINDS: {push: 0, reply: 1, broadcast: 2},\n\n  encode(msg, callback){\n    if(msg.payload.constructor === ArrayBuffer){\n      return callback(this.binaryEncode(msg))\n    } else {\n      let payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload]\n      return callback(JSON.stringify(payload))\n    }\n  },\n\n  decode(rawPayload, callback){\n    if(rawPayload.constructor === ArrayBuffer){\n      return callback(this.binaryDecode(rawPayload))\n    } else {\n      let [join_ref, ref, topic, event, payload] = JSON.parse(rawPayload)\n      return callback({join_ref, ref, topic, event, payload})\n    }\n  },\n\n  // private\n\n  binaryEncode(message){\n    let {join_ref, ref, event, topic, payload} = message\n    let metaLength = this.META_LENGTH + join_ref.length + ref.length + topic.length + event.length\n    let header = new ArrayBuffer(this.HEADER_LENGTH + metaLength)\n    let view = new DataView(header)\n    let offset = 0\n\n    view.setUint8(offset++, this.KINDS.push) // kind\n    view.setUint8(offset++, join_ref.length)\n    view.setUint8(offset++, ref.length)\n    view.setUint8(offset++, topic.length)\n    view.setUint8(offset++, event.length)\n    Array.from(join_ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(topic, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(event, char => view.setUint8(offset++, char.charCodeAt(0)))\n\n    var combined = new Uint8Array(header.byteLength + payload.byteLength)\n    combined.set(new Uint8Array(header), 0)\n    combined.set(new Uint8Array(payload), header.byteLength)\n\n    return combined.buffer\n  },\n\n  binaryDecode(buffer){\n    let view = new DataView(buffer)\n    let kind = view.getUint8(0)\n    let decoder = new TextDecoder()\n    switch(kind){\n      case this.KINDS.push: return this.decodePush(buffer, view, decoder)\n      case this.KINDS.reply: return this.decodeReply(buffer, view, decoder)\n      case this.KINDS.broadcast: return this.decodeBroadcast(buffer, view, decoder)\n    }\n  },\n\n  decodePush(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let topicSize = view.getUint8(2)\n    let eventSize = view.getUint8(3)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH - 1 // pushes have no ref\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    return {join_ref: joinRef, ref: null, topic: topic, event: event, payload: data}\n  },\n\n  decodeReply(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let refSize = view.getUint8(2)\n    let topicSize = view.getUint8(3)\n    let eventSize = view.getUint8(4)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let ref = decoder.decode(buffer.slice(offset, offset + refSize))\n    offset = offset + refSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    let payload = {status: event, response: data}\n    return {join_ref: joinRef, ref: ref, topic: topic, event: CHANNEL_EVENTS.reply, payload: payload}\n  },\n\n  decodeBroadcast(buffer, view, decoder){\n    let topicSize = view.getUint8(1)\n    let eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n\n    return {join_ref: null, ref: null, topic: topic, event: event, payload: data}\n  }\n}\n", "import {\n  global,\n  phxWindow,\n  CHANNEL_EVENTS,\n  DEFAULT_TIMEOUT,\n  DEFAULT_VSN,\n  SOCKET_STATES,\n  TRANSPORTS,\n  WS_CLOSE_NORMAL\n} from \"./constants\"\n\nimport {\n  closure\n} from \"./utils\"\n\nimport Ajax from \"./ajax\"\nimport Channel from \"./channel\"\nimport LongPoll from \"./longpoll\"\nimport Serializer from \"./serializer\"\nimport Timer from \"./timer\"\n\n/** Initializes the Socket *\n *\n * For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"ws://example.com/socket\"`,\n *                                               `\"wss://example.com\"`\n *                                               `\"/socket\"` (inherited host & protocol)\n * @param {Object} [opts] - Optional configuration\n * @param {Function} [opts.transport] - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n *\n * Defaults to WebSocket with automatic LongPoll fallback.\n * @param {Function} [opts.encode] - The function to encode outgoing messages.\n *\n * Defaults to JSON encoder.\n *\n * @param {Function} [opts.decode] - The function to decode incoming messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.parse(payload))\n * ```\n *\n * @param {number} [opts.timeout] - The default timeout in milliseconds to trigger push timeouts.\n *\n * Defaults `DEFAULT_TIMEOUT`\n * @param {number} [opts.heartbeatIntervalMs] - The millisec interval to send a heartbeat message\n * @param {number} [opts.reconnectAfterMs] - The optional function that returns the millsec\n * socket reconnect interval.\n *\n * Defaults to stepped backoff of:\n *\n * ```javascript\n * function(tries){\n *   return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n * }\n * ````\n *\n * @param {number} [opts.rejoinAfterMs] - The optional function that returns the millsec\n * rejoin interval for individual channels.\n *\n * ```javascript\n * function(tries){\n *   return [1000, 2000, 5000][tries - 1] || 10000\n * }\n * ````\n *\n * @param {Function} [opts.logger] - The optional function for specialized logging, ie:\n *\n * ```javascript\n * function(kind, msg, data) {\n *   console.log(`${kind}: ${msg}`, data)\n * }\n * ```\n *\n * @param {number} [opts.longpollerTimeout] - The maximum timeout of a long poll AJAX request.\n *\n * Defaults to 20s (double the server long poll timer).\n *\n * @param {(Object|function)} [opts.params] - The optional params to pass when connecting\n * @param {string} [opts.binaryType] - The binary type to use for binary WebSocket frames.\n *\n * Defaults to \"arraybuffer\"\n *\n * @param {vsn} [opts.vsn] - The serializer's protocol version to send on connect.\n *\n * Defaults to DEFAULT_VSN.\n*/\nexport default class Socket {\n  constructor(endPoint, opts = {}){\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\n    this.channels = []\n    this.sendBuffer = []\n    this.ref = 0\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT\n    this.transport = opts.transport || global.WebSocket || LongPoll\n    this.establishedConnections = 0\n    this.defaultEncoder = Serializer.encode.bind(Serializer)\n    this.defaultDecoder = Serializer.decode.bind(Serializer)\n    this.closeWasClean = false\n    this.binaryType = opts.binaryType || \"arraybuffer\"\n    this.connectClock = 1\n    if(this.transport !== LongPoll){\n      this.encode = opts.encode || this.defaultEncoder\n      this.decode = opts.decode || this.defaultDecoder\n    } else {\n      this.encode = this.defaultEncoder\n      this.decode = this.defaultDecoder\n    }\n    let awaitingConnectionOnPageShow = null\n    if(phxWindow && phxWindow.addEventListener){\n      phxWindow.addEventListener(\"pagehide\", _e => {\n        if(this.conn){\n          this.disconnect()\n          awaitingConnectionOnPageShow = this.connectClock\n        }\n      })\n      phxWindow.addEventListener(\"pageshow\", _e => {\n        if(awaitingConnectionOnPageShow === this.connectClock){\n          awaitingConnectionOnPageShow = null\n          this.connect()\n        }\n      })\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000\n    this.rejoinAfterMs = (tries) => {\n      if(opts.rejoinAfterMs){\n        return opts.rejoinAfterMs(tries)\n      } else {\n        return [1000, 2000, 5000][tries - 1] || 10000\n      }\n    }\n    this.reconnectAfterMs = (tries) => {\n      if(opts.reconnectAfterMs){\n        return opts.reconnectAfterMs(tries)\n      } else {\n        return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n      }\n    }\n    this.logger = opts.logger || null\n    this.longpollerTimeout = opts.longpollerTimeout || 20000\n    this.params = closure(opts.params || {})\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n    this.vsn = opts.vsn || DEFAULT_VSN\n    this.heartbeatTimer = null\n    this.pendingHeartbeatRef = null\n    this.reconnectTimer = new Timer(() => {\n      this.teardown(() => this.connect())\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Returns the LongPoll transport reference\n   */\n  getLongPollTransport(){ return LongPoll }\n\n  /**\n   * Disconnects and replaces the active transport\n   *\n   * @param {Function} newTransport - The new transport class to instantiate\n   *\n   */\n  replaceTransport(newTransport){\n    this.connectClock++\n    this.closeWasClean = true\n    this.reconnectTimer.reset()\n    this.sendBuffer = []\n    if(this.conn){\n      this.conn.close()\n      this.conn = null\n    }\n    this.transport = newTransport\n  }\n\n  /**\n   * Returns the socket protocol\n   *\n   * @returns {string}\n   */\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\n\n  /**\n   * The fully qualifed socket url\n   *\n   * @returns {string}\n   */\n  endPointURL(){\n    let uri = Ajax.appendParams(\n      Ajax.appendParams(this.endPoint, this.params()), {vsn: this.vsn})\n    if(uri.charAt(0) !== \"/\"){ return uri }\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  /**\n   * Disconnects the socket\n   *\n   * See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes for valid status codes.\n   *\n   * @param {Function} callback - Optional callback which is called after socket is disconnected.\n   * @param {integer} code - A status code for disconnection (Optional).\n   * @param {string} reason - A textual description of the reason to disconnect. (Optional)\n   */\n  disconnect(callback, code, reason){\n    this.connectClock++\n    this.closeWasClean = true\n    this.reconnectTimer.reset()\n    this.teardown(callback, code, reason)\n  }\n\n  /**\n   *\n   * @param {Object} params - The params to send when connecting, for example `{user_id: userToken}`\n   *\n   * Passing params to connect is deprecated; pass them in the Socket constructor instead:\n   * `new Socket(\"/socket\", {params: {user_id: userToken}})`.\n   */\n  connect(params){\n    if(params){\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\")\n      this.params = closure(params)\n    }\n    if(this.conn){ return }\n\n    this.connectClock++\n    this.closeWasClean = false\n    this.conn = new this.transport(this.endPointURL())\n    this.conn.binaryType = this.binaryType\n    this.conn.timeout = this.longpollerTimeout\n    this.conn.onopen = () => this.onConnOpen()\n    this.conn.onerror = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose = event => this.onConnClose(event)\n  }\n\n  /**\n   * Logs the message. Override `this.logger` for specialized logging. noops by default\n   * @param {string} kind\n   * @param {string} msg\n   * @param {Object} data\n   */\n  log(kind, msg, data){ this.logger(kind, msg, data) }\n\n  /**\n   * Returns true if a logger has been set on this socket.\n   */\n  hasLogger(){ return this.logger !== null }\n\n  /**\n   * Registers callbacks for connection open events\n   *\n   * @example socket.onOpen(function(){ console.info(\"the socket was opened\") })\n   *\n   * @param {Function} callback\n   */\n  onOpen(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.open.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection close events\n   * @param {Function} callback\n   */\n  onClose(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.close.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection error events\n   *\n   * @example socket.onError(function(error){ alert(\"An error occurred\") })\n   *\n   * @param {Function} callback\n   */\n  onError(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.error.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection message events\n   * @param {Function} callback\n   */\n  onMessage(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.message.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Pings the server and invokes the callback with the RTT in milliseconds\n   * @param {Function} callback\n   *\n   * Returns true if the ping was pushed or false if unable to be pushed.\n   */\n  ping(callback){\n    if(!this.isConnected()){ return false }\n    let ref = this.makeRef()\n    let startTime = Date.now()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: ref})\n    let onMsgRef = this.onMessage(msg => {\n      if(msg.ref === ref){\n        this.off([onMsgRef])\n        callback(Date.now() - startTime)\n      }\n    })\n    return true\n  }\n\n  /**\n   * @private\n   */\n  onConnOpen(){\n    if(this.hasLogger()) this.log(\"transport\", `connected to ${this.endPointURL()}`)\n    this.closeWasClean = false\n    this.establishedConnections++\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.resetHeartbeat()\n    this.stateChangeCallbacks.open.forEach(([, callback]) => callback())\n  }\n\n  /**\n   * @private\n   */\n\n  heartbeatTimeout(){\n    if(this.pendingHeartbeatRef){\n      this.pendingHeartbeatRef = null\n      if(this.hasLogger()){ this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\") }\n      this.abnormalClose(\"heartbeat timeout\")\n    }\n  }\n\n  resetHeartbeat(){\n    if(this.conn && this.conn.skipHeartbeat){ return }\n    this.pendingHeartbeatRef = null\n    clearTimeout(this.heartbeatTimer)\n    setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n  }\n\n  teardown(callback, code, reason){\n    if(!this.conn){\n      return callback && callback()\n    }\n\n    this.waitForBufferDone(() => {\n      if(this.conn){\n        if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\n      }\n\n      this.waitForSocketClosed(() => {\n        if(this.conn){\n          this.conn.onclose = function (){ } // noop\n          this.conn = null\n        }\n\n        callback && callback()\n      })\n    })\n  }\n\n  waitForBufferDone(callback, tries = 1){\n    if(tries === 5 || !this.conn || !this.conn.bufferedAmount){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForBufferDone(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  waitForSocketClosed(callback, tries = 1){\n    if(tries === 5 || !this.conn || this.conn.readyState === SOCKET_STATES.closed){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForSocketClosed(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  onConnClose(event){\n    let closeCode = event && event.code\n    if(this.hasLogger()) this.log(\"transport\", \"close\", event)\n    this.triggerChanError()\n    clearTimeout(this.heartbeatTimer)\n    if(!this.closeWasClean && closeCode !== 1000){\n      this.reconnectTimer.scheduleTimeout()\n    }\n    this.stateChangeCallbacks.close.forEach(([, callback]) => callback(event))\n  }\n\n  /**\n   * @private\n   */\n  onConnError(error){\n    if(this.hasLogger()) this.log(\"transport\", error)\n    let transportBefore = this.transport\n    let establishedBefore = this.establishedConnections\n    this.stateChangeCallbacks.error.forEach(([, callback]) => {\n      callback(error, transportBefore, establishedBefore)\n    })\n    if(transportBefore === this.transport || establishedBefore > 0){\n      this.triggerChanError()\n    }\n  }\n\n  /**\n   * @private\n   */\n  triggerChanError(){\n    this.channels.forEach(channel => {\n      if(!(channel.isErrored() || channel.isLeaving() || channel.isClosed())){\n        channel.trigger(CHANNEL_EVENTS.error)\n      }\n    })\n  }\n\n  /**\n   * @returns {string}\n   */\n  connectionState(){\n    switch(this.conn && this.conn.readyState){\n      case SOCKET_STATES.connecting: return \"connecting\"\n      case SOCKET_STATES.open: return \"open\"\n      case SOCKET_STATES.closing: return \"closing\"\n      default: return \"closed\"\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isConnected(){ return this.connectionState() === \"open\" }\n\n  /**\n   * @private\n   *\n   * @param {Channel}\n   */\n  remove(channel){\n    this.off(channel.stateChangeRefs)\n    this.channels = this.channels.filter(c => c.joinRef() !== channel.joinRef())\n  }\n\n  /**\n   * Removes `onOpen`, `onClose`, `onError,` and `onMessage` registrations.\n   *\n   * @param {refs} - list of refs returned by calls to\n   *                 `onOpen`, `onClose`, `onError,` and `onMessage`\n   */\n  off(refs){\n    for(let key in this.stateChangeCallbacks){\n      this.stateChangeCallbacks[key] = this.stateChangeCallbacks[key].filter(([ref]) => {\n        return refs.indexOf(ref) === -1\n      })\n    }\n  }\n\n  /**\n   * Initiates a new channel for the given topic\n   *\n   * @param {string} topic\n   * @param {Object} chanParams - Parameters for the channel\n   * @returns {Channel}\n   */\n  channel(topic, chanParams = {}){\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  /**\n   * @param {Object} data\n   */\n  push(data){\n    if(this.hasLogger()){\n      let {topic, event, payload, ref, join_ref} = data\n      this.log(\"push\", `${topic} ${event} (${join_ref}, ${ref})`, payload)\n    }\n\n    if(this.isConnected()){\n      this.encode(data, result => this.conn.send(result))\n    } else {\n      this.sendBuffer.push(() => this.encode(data, result => this.conn.send(result)))\n    }\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   * @returns {string}\n   */\n  makeRef(){\n    let newRef = this.ref + 1\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat(){\n    if(this.pendingHeartbeatRef && !this.isConnected()){ return }\n    this.pendingHeartbeatRef = this.makeRef()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef})\n    this.heartbeatTimer = setTimeout(() => this.heartbeatTimeout(), this.heartbeatIntervalMs)\n  }\n\n  abnormalClose(reason){\n    this.closeWasClean = false\n    if(this.isConnected()){ this.conn.close(WS_CLOSE_NORMAL, reason) }\n  }\n\n  flushSendBuffer(){\n    if(this.isConnected() && this.sendBuffer.length > 0){\n      this.sendBuffer.forEach(callback => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage){\n    this.decode(rawMessage.data, msg => {\n      let {topic, event, payload, ref, join_ref} = msg\n      if(ref && ref === this.pendingHeartbeatRef){\n        clearTimeout(this.heartbeatTimer)\n        this.pendingHeartbeatRef = null\n        setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n      }\n\n      if(this.hasLogger()) this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\n\n      for(let i = 0; i < this.channels.length; i++){\n        const channel = this.channels[i]\n        if(!channel.isMember(topic, event, payload, join_ref)){ continue }\n        channel.trigger(event, payload, ref, join_ref)\n      }\n\n      for(let i = 0; i < this.stateChangeCallbacks.message.length; i++){\n        let [, callback] = this.stateChangeCallbacks.message[i]\n        callback(msg)\n      }\n    })\n  }\n\n  leaveOpenTopic(topic){\n    let dupChannel = this.channels.find(c => c.topic === topic && (c.isJoined() || c.isJoining()))\n    if(dupChannel){\n      if(this.hasLogger()) this.log(\"transport\", `leaving duplicate topic \"${topic}\"`)\n      dupChannel.leave()\n    }\n  }\n}\n", "\"use strict\";\n\n(function() {\n  var PolyfillEvent = eventConstructor();\n\n  function eventConstructor() {\n    if (typeof window.CustomEvent === \"function\") return window.CustomEvent;\n    // IE<=9 Support\n    function CustomEvent(event, params) {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      var evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n    }\n    CustomEvent.prototype = window.Event.prototype;\n    return CustomEvent;\n  }\n\n  function buildHiddenInput(name, value) {\n    var input = document.createElement(\"input\");\n    input.type = \"hidden\";\n    input.name = name;\n    input.value = value;\n    return input;\n  }\n\n  function handleClick(element, targetModifierKey) {\n    var to = element.getAttribute(\"data-to\"),\n        method = buildHiddenInput(\"_method\", element.getAttribute(\"data-method\")),\n        csrf = buildHiddenInput(\"_csrf_token\", element.getAttribute(\"data-csrf\")),\n        form = document.createElement(\"form\"),\n        target = element.getAttribute(\"target\");\n\n    form.method = (element.getAttribute(\"data-method\") === \"get\") ? \"get\" : \"post\";\n    form.action = to;\n    form.style.display = \"hidden\";\n\n    if (target) form.target = target;\n    else if (targetModifierKey) form.target = \"_blank\";\n\n    form.appendChild(csrf);\n    form.appendChild(method);\n    document.body.appendChild(form);\n    form.submit();\n  }\n\n  window.addEventListener(\"click\", function(e) {\n    var element = e.target;\n    if (e.defaultPrevented) return;\n\n    while (element && element.getAttribute) {\n      var phoenixLinkEvent = new PolyfillEvent('phoenix.link.click', {\n        \"bubbles\": true, \"cancelable\": true\n      });\n\n      if (!element.dispatchEvent(phoenixLinkEvent)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n      }\n\n      if (element.getAttribute(\"data-method\")) {\n        handleClick(element, e.metaKey || e.shiftKey);\n        e.preventDefault();\n        return false;\n      } else {\n        element = element.parentNode;\n      }\n    }\n  }, false);\n\n  window.addEventListener('phoenix.link.click', function (e) {\n    var message = e.target.getAttribute(\"data-confirm\");\n    if(message && !window.confirm(message)) {\n      e.preventDefault();\n    }\n  }, false);\n})();\n", "export const CONSECUTIVE_RELOADS = \"consecutive-reloads\"\nexport const MAX_RELOADS = 10\nexport const RELOAD_JITTER_MIN = 5000\nexport const RELOAD_JITTER_MAX = 10000\nexport const FAILSAFE_JITTER = 30000\nexport const PHX_EVENT_CLASSES = [\n  \"phx-click-loading\", \"phx-change-loading\", \"phx-submit-loading\",\n  \"phx-keydown-loading\", \"phx-keyup-loading\", \"phx-blur-loading\", \"phx-focus-loading\"\n]\nexport const PHX_COMPONENT = \"data-phx-component\"\nexport const PHX_LIVE_LINK = \"data-phx-link\"\nexport const PHX_TRACK_STATIC = \"track-static\"\nexport const PHX_LINK_STATE = \"data-phx-link-state\"\nexport const PHX_REF = \"data-phx-ref\"\nexport const PHX_REF_SRC = \"data-phx-ref-src\"\nexport const PHX_TRACK_UPLOADS = \"track-uploads\"\nexport const PHX_UPLOAD_REF = \"data-phx-upload-ref\"\nexport const PHX_PREFLIGHTED_REFS = \"data-phx-preflighted-refs\"\nexport const PHX_DONE_REFS = \"data-phx-done-refs\"\nexport const PHX_DROP_TARGET = \"drop-target\"\nexport const PHX_ACTIVE_ENTRY_REFS = \"data-phx-active-refs\"\nexport const PHX_LIVE_FILE_UPDATED = \"phx:live-file:updated\"\nexport const PHX_SKIP = \"data-phx-skip\"\nexport const PHX_PRUNE = \"data-phx-prune\"\nexport const PHX_PAGE_LOADING = \"page-loading\"\nexport const PHX_CONNECTED_CLASS = \"phx-connected\"\nexport const PHX_DISCONNECTED_CLASS = \"phx-loading\"\nexport const PHX_NO_FEEDBACK_CLASS = \"phx-no-feedback\"\nexport const PHX_ERROR_CLASS = \"phx-error\"\nexport const PHX_PARENT_ID = \"data-phx-parent-id\"\nexport const PHX_MAIN = \"data-phx-main\"\nexport const PHX_ROOT_ID = \"data-phx-root-id\"\nexport const PHX_TRIGGER_ACTION = \"trigger-action\"\nexport const PHX_FEEDBACK_FOR = \"feedback-for\"\nexport const PHX_HAS_FOCUSED = \"phx-has-focused\"\nexport const FOCUSABLE_INPUTS = [\"text\", \"textarea\", \"number\", \"email\", \"password\", \"search\", \"tel\", \"url\", \"date\", \"time\", \"datetime-local\", \"color\", \"range\"]\nexport const CHECKABLE_INPUTS = [\"checkbox\", \"radio\"]\nexport const PHX_HAS_SUBMITTED = \"phx-has-submitted\"\nexport const PHX_SESSION = \"data-phx-session\"\nexport const PHX_VIEW_SELECTOR = `[${PHX_SESSION}]`\nexport const PHX_STICKY = \"data-phx-sticky\"\nexport const PHX_STATIC = \"data-phx-static\"\nexport const PHX_READONLY = \"data-phx-readonly\"\nexport const PHX_DISABLED = \"data-phx-disabled\"\nexport const PHX_DISABLE_WITH = \"disable-with\"\nexport const PHX_DISABLE_WITH_RESTORE = \"data-phx-disable-with-restore\"\nexport const PHX_HOOK = \"hook\"\nexport const PHX_DEBOUNCE = \"debounce\"\nexport const PHX_THROTTLE = \"throttle\"\nexport const PHX_UPDATE = \"update\"\nexport const PHX_KEY = \"key\"\nexport const PHX_PRIVATE = \"phxPrivate\"\nexport const PHX_AUTO_RECOVER = \"auto-recover\"\nexport const PHX_LV_DEBUG = \"phx:live-socket:debug\"\nexport const PHX_LV_PROFILE = \"phx:live-socket:profiling\"\nexport const PHX_LV_LATENCY_SIM = \"phx:live-socket:latency-sim\"\nexport const PHX_PROGRESS = \"progress\"\nexport const PHX_MOUNTED = \"mounted\"\nexport const LOADER_TIMEOUT = 1\nexport const BEFORE_UNLOAD_LOADER_TIMEOUT = 200\nexport const BINDING_PREFIX = \"phx-\"\nexport const PUSH_TIMEOUT = 30000\nexport const LINK_HEADER = \"x-requested-with\"\nexport const RESPONSE_URL_HEADER = \"x-response-url\"\nexport const DEBOUNCE_TRIGGER = \"debounce-trigger\"\nexport const THROTTLED = \"throttled\"\nexport const DEBOUNCE_PREV_KEY = \"debounce-prev-key\"\nexport const DEFAULTS = {\n  debounce: 300,\n  throttle: 300\n}\n\n// Rendered\nexport const DYNAMICS = \"d\"\nexport const STATIC = \"s\"\nexport const COMPONENTS = \"c\"\nexport const EVENTS = \"e\"\nexport const REPLY = \"r\"\nexport const TITLE = \"t\"\nexport const TEMPLATES = \"p\"\n", "import {\n  logError\n} from \"./utils\"\n\nexport default class EntryUploader {\n  constructor(entry, chunkSize, liveSocket){\n    this.liveSocket = liveSocket\n    this.entry = entry\n    this.offset = 0\n    this.chunkSize = chunkSize\n    this.chunkTimer = null\n    this.uploadChannel = liveSocket.channel(`lvu:${entry.ref}`, {token: entry.metadata()})\n  }\n\n  error(reason){\n    clearTimeout(this.chunkTimer)\n    this.uploadChannel.leave()\n    this.entry.error(reason)\n  }\n\n  upload(){\n    this.uploadChannel.onError(reason => this.error(reason))\n    this.uploadChannel.join()\n      .receive(\"ok\", _data => this.readNextChunk())\n      .receive(\"error\", reason => this.error(reason))\n  }\n\n  isDone(){ return this.offset >= this.entry.file.size }\n\n  readNextChunk(){\n    let reader = new window.FileReader()\n    let blob = this.entry.file.slice(this.offset, this.chunkSize + this.offset)\n    reader.onload = (e) => {\n      if(e.target.error === null){\n        this.offset += e.target.result.byteLength\n        this.pushChunk(e.target.result)\n      } else {\n        return logError(\"Read error: \" + e.target.error)\n      }\n    }\n    reader.readAsArrayBuffer(blob)\n  }\n\n  pushChunk(chunk){\n    if(!this.uploadChannel.isJoined()){ return }\n    this.uploadChannel.push(\"chunk\", chunk)\n      .receive(\"ok\", () => {\n        this.entry.progress((this.offset / this.entry.file.size) * 100)\n        if(!this.isDone()){\n          this.chunkTimer = setTimeout(() => this.readNextChunk(), this.liveSocket.getLatencySim() || 0)\n        }\n      })\n  }\n}\n", "import {\n  PHX_VIEW_SELECTOR\n} from \"./constants\"\n\nimport EntryUploader from \"./entry_uploader\"\n\nexport let logError = (msg, obj) => console.error && console.error(msg, obj)\n\nexport let isCid = (cid) => {\n  let type = typeof(cid)\n  return type === \"number\" || (type === \"string\" && /^(0|[1-9]\\d*)$/.test(cid))\n}\n\nexport function detectDuplicateIds(){\n  let ids = new Set()\n  let elems = document.querySelectorAll(\"*[id]\")\n  for(let i = 0, len = elems.length; i < len; i++){\n    if(ids.has(elems[i].id)){\n      console.error(`Multiple IDs detected: ${elems[i].id}. Ensure unique element ids.`)\n    } else {\n      ids.add(elems[i].id)\n    }\n  }\n}\n\nexport let debug = (view, kind, msg, obj) => {\n  if(view.liveSocket.isDebugEnabled()){\n    console.log(`${view.id} ${kind}: ${msg} - `, obj)\n  }\n}\n\n// wraps value in closure or returns closure\nexport let closure = (val) => typeof val === \"function\" ? val : function (){ return val }\n\nexport let clone = (obj) => { return JSON.parse(JSON.stringify(obj)) }\n\nexport let closestPhxBinding = (el, binding, borderEl) => {\n  do {\n    if(el.matches(`[${binding}]`)){ return el }\n    el = el.parentElement || el.parentNode\n  } while(el !== null && el.nodeType === 1 && !((borderEl && borderEl.isSameNode(el)) || el.matches(PHX_VIEW_SELECTOR)))\n  return null\n}\n\nexport let isObject = (obj) => {\n  return obj !== null && typeof obj === \"object\" && !(obj instanceof Array)\n}\n\nexport let isEqualObj = (obj1, obj2) => JSON.stringify(obj1) === JSON.stringify(obj2)\n\nexport let isEmpty = (obj) => {\n  for(let x in obj){ return false }\n  return true\n}\n\nexport let maybe = (el, callback) => el && callback(el)\n\nexport let channelUploader = function (entries, onError, resp, liveSocket){\n  entries.forEach(entry => {\n    let entryUploader = new EntryUploader(entry, resp.config.chunk_size, liveSocket)\n    entryUploader.upload()\n  })\n}\n", "let Browser = {\n  canPushState(){ return (typeof (history.pushState) !== \"undefined\") },\n\n  dropLocal(localStorage, namespace, subkey){\n    return localStorage.removeItem(this.localKey(namespace, subkey))\n  },\n\n  updateLocal(localStorage, namespace, subkey, initial, func){\n    let current = this.getLocal(localStorage, namespace, subkey)\n    let key = this.localKey(namespace, subkey)\n    let newVal = current === null ? initial : func(current)\n    localStorage.setItem(key, JSON.stringify(newVal))\n    return newVal\n  },\n\n  getLocal(localStorage, namespace, subkey){\n    return JSON.parse(localStorage.getItem(this.localKey(namespace, subkey)))\n  },\n\n  updateCurrentState(callback){\n    if(!this.canPushState()){ return }\n    history.replaceState(callback(history.state || {}), \"\", window.location.href)\n  },\n\n  pushState(kind, meta, to){\n    if(this.canPushState()){\n      if(to !== window.location.href){\n        if(meta.type == \"redirect\" && meta.scroll){\n          // If we're redirecting store the current scrollY for the current history state.\n          let currentState = history.state || {}\n          currentState.scroll = meta.scroll\n          history.replaceState(currentState, \"\", window.location.href)\n        }\n\n        delete meta.scroll // Only store the scroll in the redirect case.\n        history[kind + \"State\"](meta, \"\", to || null) // IE will coerce undefined to string\n        let hashEl = this.getHashTargetEl(window.location.hash)\n\n        if(hashEl){\n          hashEl.scrollIntoView()\n        } else if(meta.type === \"redirect\"){\n          window.scroll(0, 0)\n        }\n      }\n    } else {\n      this.redirect(to)\n    }\n  },\n\n  setCookie(name, value){\n    document.cookie = `${name}=${value}`\n  },\n\n  getCookie(name){\n    return document.cookie.replace(new RegExp(`(?:(?:^|.*;\\s*)${name}\\s*\\=\\s*([^;]*).*$)|^.*$`), \"$1\")\n  },\n\n  redirect(toURL, flash){\n    if(flash){ Browser.setCookie(\"__phoenix_flash__\", flash + \"; max-age=60000; path=/\") }\n    window.location = toURL\n  },\n\n  localKey(namespace, subkey){ return `${namespace}-${subkey}` },\n\n  getHashTargetEl(maybeHash){\n    let hash = maybeHash.toString().substring(1)\n    if(hash === \"\"){ return }\n    return document.getElementById(hash) || document.querySelector(`a[name=\"${hash}\"]`)\n  }\n}\n\nexport default Browser\n", "import {\n  CHECKABLE_INPUTS,\n  DEBOUNCE_PREV_KEY,\n  DEBOUNCE_TRIGGER,\n  FOCUSABLE_INPUTS,\n  PHX_COMPONENT,\n  PHX_EVENT_CLASSES,\n  PHX_HAS_FOCUSED,\n  PHX_HAS_SUBMITTED,\n  PHX_MAIN,\n  PHX_NO_FEEDBACK_CLASS,\n  PHX_PARENT_ID,\n  PHX_PRIVATE,\n  PHX_REF,\n  PHX_REF_SRC,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PHX_STICKY,\n  THROTTLED\n} from \"./constants\"\n\nimport {\n  logError\n} from \"./utils\"\n\nlet DOM = {\n  byId(id){ return document.getElementById(id) || logError(`no id found for ${id}`) },\n\n  removeClass(el, className){\n    el.classList.remove(className)\n    if(el.classList.length === 0){ el.removeAttribute(\"class\") }\n  },\n\n  all(node, query, callback){\n    if(!node){ return [] }\n    let array = Array.from(node.querySelectorAll(query))\n    return callback ? array.forEach(callback) : array\n  },\n\n  childNodeLength(html){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return template.content.childElementCount\n  },\n\n  isUploadInput(el){ return el.type === \"file\" && el.getAttribute(PHX_UPLOAD_REF) !== null },\n\n  findUploadInputs(node){ return this.all(node, `input[type=\"file\"][${PHX_UPLOAD_REF}]`) },\n\n  findComponentNodeList(node, cid){\n    return this.filterWithinSameLiveView(this.all(node, `[${PHX_COMPONENT}=\"${cid}\"]`), node)\n  },\n\n  isPhxDestroyed(node){\n    return node.id && DOM.private(node, \"destroyed\") ? true : false\n  },\n\n  markPhxChildDestroyed(el){\n    if(this.isPhxChild(el)){ el.setAttribute(PHX_SESSION, \"\") }\n    this.putPrivate(el, \"destroyed\", true)\n  },\n\n  findPhxChildrenInFragment(html, parentId){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return this.findPhxChildren(template.content, parentId)\n  },\n\n  isIgnored(el, phxUpdate){\n    return (el.getAttribute(phxUpdate) || el.getAttribute(\"data-phx-update\")) === \"ignore\"\n  },\n\n  isPhxUpdate(el, phxUpdate, updateTypes){\n    return el.getAttribute && updateTypes.indexOf(el.getAttribute(phxUpdate)) >= 0\n  },\n\n  findPhxSticky(el){ return this.all(el, `[${PHX_STICKY}]`) },\n\n  findPhxChildren(el, parentId){\n    return this.all(el, `${PHX_VIEW_SELECTOR}[${PHX_PARENT_ID}=\"${parentId}\"]`)\n  },\n\n  findParentCIDs(node, cids){\n    let initial = new Set(cids)\n    let parentCids =\n      cids.reduce((acc, cid) => {\n        let selector = `[${PHX_COMPONENT}=\"${cid}\"] [${PHX_COMPONENT}]`\n\n        this.filterWithinSameLiveView(this.all(node, selector), node)\n          .map(el => parseInt(el.getAttribute(PHX_COMPONENT)))\n          .forEach(childCID => acc.delete(childCID))\n\n        return acc\n      }, initial)\n\n    return parentCids.size === 0 ? new Set(cids) : parentCids\n  },\n\n  filterWithinSameLiveView(nodes, parent){\n    if(parent.querySelector(PHX_VIEW_SELECTOR)){\n      return nodes.filter(el => this.withinSameLiveView(el, parent))\n    } else {\n      return nodes\n    }\n  },\n\n  withinSameLiveView(node, parent){\n    while(node = node.parentNode){\n      if(node.isSameNode(parent)){ return true }\n      if(node.getAttribute(PHX_SESSION) !== null){ return false }\n    }\n  },\n\n  private(el, key){ return el[PHX_PRIVATE] && el[PHX_PRIVATE][key] },\n\n  deletePrivate(el, key){ el[PHX_PRIVATE] && delete (el[PHX_PRIVATE][key]) },\n\n  putPrivate(el, key, value){\n    if(!el[PHX_PRIVATE]){ el[PHX_PRIVATE] = {} }\n    el[PHX_PRIVATE][key] = value\n  },\n\n  updatePrivate(el, key, defaultVal, updateFunc){\n    let existing = this.private(el, key)\n    if(existing === undefined){\n      this.putPrivate(el, key, updateFunc(defaultVal))\n    } else {\n      this.putPrivate(el, key, updateFunc(existing))\n    }\n  },\n\n  copyPrivates(target, source){\n    if(source[PHX_PRIVATE]){\n      target[PHX_PRIVATE] = source[PHX_PRIVATE]\n    }\n  },\n\n  putTitle(str){\n    let titleEl = document.querySelector(\"title\")\n    let {prefix, suffix} = titleEl.dataset\n    document.title = `${prefix || \"\"}${str}${suffix || \"\"}`\n  },\n\n  debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, asyncFilter, callback){\n    let debounce = el.getAttribute(phxDebounce)\n    let throttle = el.getAttribute(phxThrottle)\n    if(debounce === \"\"){ debounce = defaultDebounce }\n    if(throttle === \"\"){ throttle = defaultThrottle }\n    let value = debounce || throttle\n    switch(value){\n      case null: return callback()\n\n      case \"blur\":\n        if(this.once(el, \"debounce-blur\")){\n          el.addEventListener(\"blur\", () => callback())\n        }\n        return\n\n      default:\n        let timeout = parseInt(value)\n        let trigger = () => throttle ? this.deletePrivate(el, THROTTLED) : callback()\n        let currentCycle = this.incCycle(el, DEBOUNCE_TRIGGER, trigger)\n        if(isNaN(timeout)){ return logError(`invalid throttle/debounce value: ${value}`) }\n        if(throttle){\n          let newKeyDown = false\n          if(event.type === \"keydown\"){\n            let prevKey = this.private(el, DEBOUNCE_PREV_KEY)\n            this.putPrivate(el, DEBOUNCE_PREV_KEY, event.key)\n            newKeyDown = prevKey !== event.key\n          }\n\n          if(!newKeyDown && this.private(el, THROTTLED)){\n            return false\n          } else {\n            callback()\n            this.putPrivate(el, THROTTLED, true)\n            setTimeout(() => {\n              if(asyncFilter()){ this.triggerCycle(el, DEBOUNCE_TRIGGER) }\n            }, timeout)\n          }\n        } else {\n          setTimeout(() => {\n            if(asyncFilter()){ this.triggerCycle(el, DEBOUNCE_TRIGGER, currentCycle) }\n          }, timeout)\n        }\n\n        let form = el.form\n        if(form && this.once(form, \"bind-debounce\")){\n          form.addEventListener(\"submit\", () => {\n            Array.from((new FormData(form)).entries(), ([name]) => {\n              let input = form.querySelector(`[name=\"${name}\"]`)\n              this.incCycle(input, DEBOUNCE_TRIGGER)\n              this.deletePrivate(input, THROTTLED)\n            })\n          })\n        }\n        if(this.once(el, \"bind-debounce\")){\n          el.addEventListener(\"blur\", () => this.triggerCycle(el, DEBOUNCE_TRIGGER))\n        }\n    }\n  },\n\n  triggerCycle(el, key, currentCycle){\n    let [cycle, trigger] = this.private(el, key)\n    if(!currentCycle){ currentCycle = cycle }\n    if(currentCycle === cycle){\n      this.incCycle(el, key)\n      trigger()\n    }\n  },\n\n  once(el, key){\n    if(this.private(el, key) === true){ return false }\n    this.putPrivate(el, key, true)\n    return true\n  },\n\n  incCycle(el, key, trigger = function (){ }){\n    let [currentCycle] = this.private(el, key) || [0, trigger]\n    currentCycle++\n    this.putPrivate(el, key, [currentCycle, trigger])\n    return currentCycle\n  },\n\n  discardError(container, el, phxFeedbackFor){\n    let field = el.getAttribute && el.getAttribute(phxFeedbackFor)\n    // TODO: Remove id lookup after we update Phoenix to use input_name instead of input_id\n    let input = field && container.querySelector(`[id=\"${field}\"], [name=\"${field}\"], [name=\"${field}[]\"]`)\n    if(!input){ return }\n\n    if(!(this.private(input, PHX_HAS_FOCUSED) || this.private(input.form, PHX_HAS_SUBMITTED))){\n      el.classList.add(PHX_NO_FEEDBACK_CLASS)\n    }\n  },\n\n  showError(inputEl, phxFeedbackFor){\n    if(inputEl.id || inputEl.name){\n      this.all(inputEl.form, `[${phxFeedbackFor}=\"${inputEl.id}\"], [${phxFeedbackFor}=\"${inputEl.name}\"]`, (el) => {\n        this.removeClass(el, PHX_NO_FEEDBACK_CLASS)\n      })\n    }\n  },\n\n  isPhxChild(node){\n    return node.getAttribute && node.getAttribute(PHX_PARENT_ID)\n  },\n\n  isPhxSticky(node){\n    return node.getAttribute && node.getAttribute(PHX_STICKY) !== null\n  },\n\n  firstPhxChild(el){\n    return this.isPhxChild(el) ? el : this.all(el, `[${PHX_PARENT_ID}]`)[0]\n  },\n\n  dispatchEvent(target, name, opts = {}){\n    let bubbles = opts.bubbles === undefined ? true : !!opts.bubbles\n    let eventOpts = {bubbles: bubbles, cancelable: true, detail: opts.detail || {}}\n    let event = name === \"click\" ? new MouseEvent(\"click\", eventOpts) : new CustomEvent(name, eventOpts)\n    target.dispatchEvent(event)\n  },\n\n  cloneNode(node, html){\n    if(typeof (html) === \"undefined\"){\n      return node.cloneNode(true)\n    } else {\n      let cloned = node.cloneNode(false)\n      cloned.innerHTML = html\n      return cloned\n    }\n  },\n\n  mergeAttrs(target, source, opts = {}){\n    let exclude = opts.exclude || []\n    let isIgnored = opts.isIgnored\n    let sourceAttrs = source.attributes\n    for(let i = sourceAttrs.length - 1; i >= 0; i--){\n      let name = sourceAttrs[i].name\n      if(exclude.indexOf(name) < 0){ target.setAttribute(name, source.getAttribute(name)) }\n    }\n\n    let targetAttrs = target.attributes\n    for(let i = targetAttrs.length - 1; i >= 0; i--){\n      let name = targetAttrs[i].name\n      if(isIgnored){\n        if(name.startsWith(\"data-\") && !source.hasAttribute(name)){ target.removeAttribute(name) }\n      } else {\n        if(!source.hasAttribute(name)){ target.removeAttribute(name) }\n      }\n    }\n  },\n\n  mergeFocusedInput(target, source){\n    // skip selects because FF will reset highlighted index for any setAttribute\n    if(!(target instanceof HTMLSelectElement)){ DOM.mergeAttrs(target, source, {exclude: [\"value\"]}) }\n    if(source.readOnly){\n      target.setAttribute(\"readonly\", true)\n    } else {\n      target.removeAttribute(\"readonly\")\n    }\n  },\n\n  hasSelectionRange(el){\n    return el.setSelectionRange && (el.type === \"text\" || el.type === \"textarea\")\n  },\n\n  restoreFocus(focused, selectionStart, selectionEnd){\n    if(!DOM.isTextualInput(focused)){ return }\n    let wasFocused = focused.matches(\":focus\")\n    if(focused.readOnly){ focused.blur() }\n    if(!wasFocused){ focused.focus() }\n    if(this.hasSelectionRange(focused)){\n      focused.setSelectionRange(selectionStart, selectionEnd)\n    }\n  },\n\n  isFormInput(el){ return /^(?:input|select|textarea)$/i.test(el.tagName) && el.type !== \"button\" },\n\n  syncAttrsToProps(el){\n    if(el instanceof HTMLInputElement && CHECKABLE_INPUTS.indexOf(el.type.toLocaleLowerCase()) >= 0){\n      el.checked = el.getAttribute(\"checked\") !== null\n    }\n  },\n\n  isTextualInput(el){ return FOCUSABLE_INPUTS.indexOf(el.type) >= 0 },\n\n  isNowTriggerFormExternal(el, phxTriggerExternal){\n    return el.getAttribute && el.getAttribute(phxTriggerExternal) !== null\n  },\n\n  syncPendingRef(fromEl, toEl, disableWith){\n    let ref = fromEl.getAttribute(PHX_REF)\n    if(ref === null){ return true }\n    let refSrc = fromEl.getAttribute(PHX_REF_SRC)\n\n    if(DOM.isFormInput(fromEl) || fromEl.getAttribute(disableWith) !== null){\n      if(DOM.isUploadInput(fromEl)){ DOM.mergeAttrs(fromEl, toEl, {isIgnored: true}) }\n      DOM.putPrivate(fromEl, PHX_REF, toEl)\n      return false\n    } else {\n      PHX_EVENT_CLASSES.forEach(className => {\n        fromEl.classList.contains(className) && toEl.classList.add(className)\n      })\n      toEl.setAttribute(PHX_REF, ref)\n      toEl.setAttribute(PHX_REF_SRC, refSrc)\n      return true\n    }\n  },\n\n  cleanChildNodes(container, phxUpdate){\n    if(DOM.isPhxUpdate(container, phxUpdate, [\"append\", \"prepend\"])){\n      let toRemove = []\n      container.childNodes.forEach(childNode => {\n        if(!childNode.id){\n          // Skip warning if it's an empty text node (e.g. a new-line)\n          let isEmptyTextNode = childNode.nodeType === Node.TEXT_NODE && childNode.nodeValue.trim() === \"\"\n          if(!isEmptyTextNode){\n            logError(\"only HTML element tags with an id are allowed inside containers with phx-update.\\n\\n\" +\n              `removing illegal node: \"${(childNode.outerHTML || childNode.nodeValue).trim()}\"\\n\\n`)\n          }\n          toRemove.push(childNode)\n        }\n      })\n      toRemove.forEach(childNode => childNode.remove())\n    }\n  },\n\n  replaceRootContainer(container, tagName, attrs){\n    let retainedAttrs = new Set([\"id\", PHX_SESSION, PHX_STATIC, PHX_MAIN, PHX_ROOT_ID])\n    if(container.tagName.toLowerCase() === tagName.toLowerCase()){\n      Array.from(container.attributes)\n        .filter(attr => !retainedAttrs.has(attr.name.toLowerCase()))\n        .forEach(attr => container.removeAttribute(attr.name))\n\n      Object.keys(attrs)\n        .filter(name => !retainedAttrs.has(name.toLowerCase()))\n        .forEach(attr => container.setAttribute(attr, attrs[attr]))\n\n      return container\n\n    } else {\n      let newContainer = document.createElement(tagName)\n      Object.keys(attrs).forEach(attr => newContainer.setAttribute(attr, attrs[attr]))\n      retainedAttrs.forEach(attr => newContainer.setAttribute(attr, container.getAttribute(attr)))\n      newContainer.innerHTML = container.innerHTML\n      container.replaceWith(newContainer)\n      return newContainer\n    }\n  },\n\n  getSticky(el, name, defaultVal){\n    let op = (DOM.private(el, \"sticky\") || []).find(([existingName, ]) => name === existingName)\n    if(op){\n      let [_name, _op, stashedResult] = op\n      return stashedResult\n    } else {\n      return typeof(defaultVal) === \"function\" ? defaultVal() : defaultVal\n    }\n  },\n\n  deleteSticky(el, name){\n    this.updatePrivate(el, \"sticky\", [], ops => {\n      return ops.filter(([existingName, _]) => existingName !== name)\n    })\n  },\n\n  putSticky(el, name, op){\n    let stashedResult = op(el)\n    this.updatePrivate(el, \"sticky\", [], ops => {\n      let existingIndex = ops.findIndex(([existingName, ]) => name === existingName)\n      if(existingIndex >= 0){\n        ops[existingIndex] = [name, op, stashedResult]\n      } else {\n        ops.push([name, op, stashedResult])\n      }\n      return ops\n    })\n  },\n\n  applyStickyOperations(el){\n    let ops = DOM.private(el, \"sticky\")\n    if(!ops){ return }\n\n    ops.forEach(([name, op, _stashed]) => this.putSticky(el, name, op))\n  }\n}\n\nexport default DOM\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS\n} from \"./constants\"\n\nimport {\n  channelUploader,\n  logError\n} from \"./utils\"\n\nimport LiveUploader from \"./live_uploader\"\n\nexport default class UploadEntry {\n  static isActive(fileEl, file){\n    let isNew = file._phxRef === undefined\n    let activeRefs = fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    let isActive = activeRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return file.size > 0 && (isNew || isActive)\n  }\n\n  static isPreflighted(fileEl, file){\n    let preflightedRefs = fileEl.getAttribute(PHX_PREFLIGHTED_REFS).split(\",\")\n    let isPreflighted = preflightedRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return isPreflighted && this.isActive(fileEl, file)\n  }\n\n  constructor(fileEl, file, view){\n    this.ref = LiveUploader.genFileRef(file)\n    this.fileEl = fileEl\n    this.file = file\n    this.view = view\n    this.meta = null\n    this._isCancelled = false\n    this._isDone = false\n    this._progress = 0\n    this._lastProgressSent = -1\n    this._onDone = function (){ }\n    this._onElUpdated = this.onElUpdated.bind(this)\n    this.fileEl.addEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n  }\n\n  metadata(){ return this.meta }\n\n  progress(progress){\n    this._progress = Math.floor(progress)\n    if(this._progress > this._lastProgressSent){\n      if(this._progress >= 100){\n        this._progress = 100\n        this._lastProgressSent = 100\n        this._isDone = true\n        this.view.pushFileProgress(this.fileEl, this.ref, 100, () => {\n          LiveUploader.untrackFile(this.fileEl, this.file)\n          this._onDone()\n        })\n      } else {\n        this._lastProgressSent = this._progress\n        this.view.pushFileProgress(this.fileEl, this.ref, this._progress)\n      }\n    }\n  }\n\n  cancel(){\n    this._isCancelled = true\n    this._isDone = true\n    this._onDone()\n  }\n\n  isDone(){ return this._isDone }\n\n  error(reason = \"failed\"){\n    this.fileEl.removeEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n    this.view.pushFileProgress(this.fileEl, this.ref, {error: reason})\n    LiveUploader.clearFiles(this.fileEl)\n  }\n\n  //private\n\n  onDone(callback){\n    this._onDone = () => {\n      this.fileEl.removeEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n      callback()\n    }\n  }\n\n  onElUpdated(){\n    let activeRefs = this.fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    if(activeRefs.indexOf(this.ref) === -1){ this.cancel() }\n  }\n\n  toPreflightPayload(){\n    return {\n      last_modified: this.file.lastModified,\n      name: this.file.name,\n      relative_path: this.file.webkitRelativePath,\n      size: this.file.size,\n      type: this.file.type,\n      ref: this.ref\n    }\n  }\n\n  uploader(uploaders){\n    if(this.meta.uploader){\n      let callback = uploaders[this.meta.uploader] || logError(`no uploader configured for ${this.meta.uploader}`)\n      return {name: this.meta.uploader, callback: callback}\n    } else {\n      return {name: \"channel\", callback: channelUploader}\n    }\n  }\n\n  zipPostFlight(resp){\n    this.meta = resp.entries[this.ref]\n    if(!this.meta){ logError(`no preflight upload response returned with ref ${this.ref}`, {input: this.fileEl, response: resp}) }\n  }\n}\n", "import {\n  PHX_DONE_REFS,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport {\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport UploadEntry from \"./upload_entry\"\n\nlet liveUploaderFileRef = 0\n\nexport default class LiveUploader {\n  static genFileRef(file){\n    let ref = file._phxRef\n    if(ref !== undefined){\n      return ref\n    } else {\n      file._phxRef = (liveUploaderFileRef++).toString()\n      return file._phxRef\n    }\n  }\n\n  static getEntryDataURL(inputEl, ref, callback){\n    let file = this.activeFiles(inputEl).find(file => this.genFileRef(file) === ref)\n    callback(URL.createObjectURL(file))\n  }\n\n  static hasUploadsInProgress(formEl){\n    let active = 0\n    DOM.findUploadInputs(formEl).forEach(input => {\n      if(input.getAttribute(PHX_PREFLIGHTED_REFS) !== input.getAttribute(PHX_DONE_REFS)){\n        active++\n      }\n    })\n    return active > 0\n  }\n\n  static serializeUploads(inputEl){\n    let files = this.activeFiles(inputEl)\n    let fileData = {}\n    files.forEach(file => {\n      let entry = {path: inputEl.name}\n      let uploadRef = inputEl.getAttribute(PHX_UPLOAD_REF)\n      fileData[uploadRef] = fileData[uploadRef] || []\n      entry.ref = this.genFileRef(file)\n      entry.last_modified = file.lastModified\n      entry.name = file.name || entry.ref\n      entry.relative_path = file.webkitRelativePath\n      entry.type = file.type\n      entry.size = file.size\n      fileData[uploadRef].push(entry)\n    })\n    return fileData\n  }\n\n  static clearFiles(inputEl){\n    inputEl.value = null\n    inputEl.removeAttribute(PHX_UPLOAD_REF)\n    DOM.putPrivate(inputEl, \"files\", [])\n  }\n\n  static untrackFile(inputEl, file){\n    DOM.putPrivate(inputEl, \"files\", DOM.private(inputEl, \"files\").filter(f => !Object.is(f, file)))\n  }\n\n  static trackFiles(inputEl, files){\n    if(inputEl.getAttribute(\"multiple\") !== null){\n      let newFiles = files.filter(file => !this.activeFiles(inputEl).find(f => Object.is(f, file)))\n      DOM.putPrivate(inputEl, \"files\", this.activeFiles(inputEl).concat(newFiles))\n      inputEl.value = null\n    } else {\n      DOM.putPrivate(inputEl, \"files\", files)\n    }\n  }\n\n  static activeFileInputs(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(el => el.files && this.activeFiles(el).length > 0)\n  }\n\n  static activeFiles(input){\n    return (DOM.private(input, \"files\") || []).filter(f => UploadEntry.isActive(input, f))\n  }\n\n  static inputsAwaitingPreflight(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(input => this.filesAwaitingPreflight(input).length > 0)\n  }\n\n  static filesAwaitingPreflight(input){\n    return this.activeFiles(input).filter(f => !UploadEntry.isPreflighted(input, f))\n  }\n\n  constructor(inputEl, view, onComplete){\n    this.view = view\n    this.onComplete = onComplete\n    this._entries =\n      Array.from(LiveUploader.filesAwaitingPreflight(inputEl) || [])\n        .map(file => new UploadEntry(inputEl, file, view))\n\n    this.numEntriesInProgress = this._entries.length\n  }\n\n  entries(){ return this._entries }\n\n  initAdapterUpload(resp, onError, liveSocket){\n    this._entries =\n      this._entries.map(entry => {\n        entry.zipPostFlight(resp)\n        entry.onDone(() => {\n          this.numEntriesInProgress--\n          if(this.numEntriesInProgress === 0){ this.onComplete() }\n        })\n        return entry\n      })\n\n    let groupedEntries = this._entries.reduce((acc, entry) => {\n      let {name, callback} = entry.uploader(liveSocket.uploaders)\n      acc[name] = acc[name] || {callback: callback, entries: []}\n      acc[name].entries.push(entry)\n      return acc\n    }, {})\n\n    for(let name in groupedEntries){\n      let {callback, entries} = groupedEntries[name]\n      callback(entries, onError, resp, liveSocket)\n    }\n  }\n}\n", "let ARIA = {\n  focusMain(){\n    let target = document.querySelector(\"main h1, main, h1\")\n    if(target){\n      let origTabIndex = target.tabIndex\n      target.tabIndex = -1\n      target.focus()\n      target.tabIndex = origTabIndex\n    }\n  },\n\n  anyOf(instance, classes){ return classes.find(name => instance instanceof name) },\n\n  isFocusable(el, interactiveOnly){\n    return(\n      (el instanceof HTMLAnchorElement && el.rel !== \"ignore\") ||\n      (el instanceof HTMLAreaElement && el.href !== undefined) ||\n      (!el.disabled && (this.anyOf(el, [HTMLInputElement, HTMLSelectElement, HTMLTextAreaElement, HTMLButtonElement]))) ||\n      (el instanceof HTMLIFrameElement) ||\n      (el.tabIndex > 0 || (!interactiveOnly && el.tabIndex === 0 && el.getAttribute(\"tabindex\") !== null && el.getAttribute(\"aria-hidden\") !== \"true\"))\n    )\n  },\n\n  attemptFocus(el, interactiveOnly){\n    if(this.isFocusable(el, interactiveOnly)){ try{ el.focus() } catch(e){} }\n    return !!document.activeElement && document.activeElement.isSameNode(el)\n  },\n\n  focusFirstInteractive(el){\n    let child = el.firstElementChild\n    while(child){\n      if(this.attemptFocus(child, true) || this.focusFirstInteractive(child, true)){\n        return true\n      }\n      child = child.nextElementSibling\n    }\n  },\n\n  focusFirst(el){\n    let child = el.firstElementChild\n    while(child){\n      if(this.attemptFocus(child) || this.focusFirst(child)){\n        return true\n      }\n      child = child.nextElementSibling\n    }\n  },\n\n  focusLast(el){\n    let child = el.lastElementChild\n    while(child){\n      if(this.attemptFocus(child) || this.focusLast(child)){\n        return true\n      }\n      child = child.previousElementSibling\n    }\n  }\n}\nexport default ARIA", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport LiveUploader from \"./live_uploader\"\nimport ARIA from \"./aria\"\n\nlet Hooks = {\n  LiveFileUpload: {\n    activeRefs(){ return this.el.getAttribute(PHX_ACTIVE_ENTRY_REFS) },\n\n    preflightedRefs(){ return this.el.getAttribute(PHX_PREFLIGHTED_REFS) },\n\n    mounted(){ this.preflightedWas = this.preflightedRefs() },\n\n    updated(){\n      let newPreflights = this.preflightedRefs()\n      if(this.preflightedWas !== newPreflights){\n        this.preflightedWas = newPreflights\n        if(newPreflights === \"\"){\n          this.__view.cancelSubmit(this.el.form)\n        }\n      }\n\n      if(this.activeRefs() === \"\"){ this.el.value = null }\n      this.el.dispatchEvent(new CustomEvent(PHX_LIVE_FILE_UPDATED))\n    }\n  },\n\n  LiveImgPreview: {\n    mounted(){\n      this.ref = this.el.getAttribute(\"data-phx-entry-ref\")\n      this.inputEl = document.getElementById(this.el.getAttribute(PHX_UPLOAD_REF))\n      LiveUploader.getEntryDataURL(this.inputEl, this.ref, url => {\n        this.url = url\n        this.el.src = url\n      })\n    },\n    destroyed(){\n      URL.revokeObjectURL(this.url)\n    }\n  },\n  FocusWrap: {\n    mounted(){\n      this.focusStart = this.el.firstElementChild\n      this.focusEnd = this.el.lastElementChild\n      this.focusStart.addEventListener(\"focus\", () => ARIA.focusLast(this.el))\n      this.focusEnd.addEventListener(\"focus\", () => ARIA.focusFirst(this.el))\n      this.el.addEventListener(\"phx:show-end\", () => this.el.focus())\n      if(window.getComputedStyle(this.el).display !== \"none\"){\n        ARIA.focusFirst(this.el)\n      }\n    }\n  }\n}\n\nexport default Hooks\n", "import {\n  maybe\n} from \"./utils\"\n\nimport DOM from \"./dom\"\n\nexport default class DOMPostMorphRestorer {\n  constructor(containerBefore, containerAfter, updateType){\n    let idsBefore = new Set()\n    let idsAfter = new Set([...containerAfter.children].map(child => child.id))\n\n    let elementsToModify = []\n\n    Array.from(containerBefore.children).forEach(child => {\n      if(child.id){ // all of our children should be elements with ids\n        idsBefore.add(child.id)\n        if(idsAfter.has(child.id)){\n          let previousElementId = child.previousElementSibling && child.previousElementSibling.id\n          elementsToModify.push({elementId: child.id, previousElementId: previousElementId})\n        }\n      }\n    })\n\n    this.containerId = containerAfter.id\n    this.updateType = updateType\n    this.elementsToModify = elementsToModify\n    this.elementIdsToAdd = [...idsAfter].filter(id => !idsBefore.has(id))\n  }\n\n  // We do the following to optimize append/prepend operations:\n  //   1) Track ids of modified elements & of new elements\n  //   2) All the modified elements are put back in the correct position in the DOM tree\n  //      by storing the id of their previous sibling\n  //   3) New elements are going to be put in the right place by morphdom during append.\n  //      For prepend, we move them to the first position in the container\n  perform(){\n    let container = DOM.byId(this.containerId)\n    this.elementsToModify.forEach(elementToModify => {\n      if(elementToModify.previousElementId){\n        maybe(document.getElementById(elementToModify.previousElementId), previousElem => {\n          maybe(document.getElementById(elementToModify.elementId), elem => {\n            let isInRightPlace = elem.previousElementSibling && elem.previousElementSibling.id == previousElem.id\n            if(!isInRightPlace){\n              previousElem.insertAdjacentElement(\"afterend\", elem)\n            }\n          })\n        })\n      } else {\n        // This is the first element in the container\n        maybe(document.getElementById(elementToModify.elementId), elem => {\n          let isInRightPlace = elem.previousElementSibling == null\n          if(!isInRightPlace){\n            container.insertAdjacentElement(\"afterbegin\", elem)\n          }\n        })\n      }\n    })\n\n    if(this.updateType == \"prepend\"){\n      this.elementIdsToAdd.reverse().forEach(elemId => {\n        maybe(document.getElementById(elemId), elem => container.insertAdjacentElement(\"afterbegin\", elem))\n      })\n    }\n  }\n}\n", "var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n", "import {\n  PHX_COMPONENT,\n  PHX_DISABLE_WITH,\n  PHX_FEEDBACK_FOR,\n  PHX_PRUNE,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_SKIP,\n  PHX_STATIC,\n  PHX_TRIGGER_ACTION,\n  PHX_UPDATE\n} from \"./constants\"\n\nimport {\n  detectDuplicateIds,\n  isCid\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport DOMPostMorphRestorer from \"./dom_post_morph_restorer\"\nimport morphdom from \"morphdom\"\n\nexport default class DOMPatch {\n  static patchEl(fromEl, toEl, activeElement){\n    morphdom(fromEl, toEl, {\n      childrenOnly: false,\n      onBeforeElUpdated: (fromEl, toEl) => {\n        if(activeElement && activeElement.isSameNode(fromEl) && DOM.isFormInput(fromEl)){\n          DOM.mergeFocusedInput(fromEl, toEl)\n          return false\n        }\n      }\n    })\n  }\n\n  constructor(view, container, id, html, targetCID){\n    this.view = view\n    this.liveSocket = view.liveSocket\n    this.container = container\n    this.id = id\n    this.rootID = view.root.id\n    this.html = html\n    this.targetCID = targetCID\n    this.cidPatch = isCid(this.targetCID)\n    this.callbacks = {\n      beforeadded: [], beforeupdated: [], beforephxChildAdded: [],\n      afteradded: [], afterupdated: [], afterdiscarded: [], afterphxChildAdded: [],\n      aftertransitionsDiscarded: []\n    }\n  }\n\n  before(kind, callback){ this.callbacks[`before${kind}`].push(callback) }\n  after(kind, callback){ this.callbacks[`after${kind}`].push(callback) }\n\n  trackBefore(kind, ...args){\n    this.callbacks[`before${kind}`].forEach(callback => callback(...args))\n  }\n\n  trackAfter(kind, ...args){\n    this.callbacks[`after${kind}`].forEach(callback => callback(...args))\n  }\n\n  markPrunableContentForRemoval(){\n    DOM.all(this.container, \"[phx-update=append] > *, [phx-update=prepend] > *\", el => {\n      el.setAttribute(PHX_PRUNE, \"\")\n    })\n  }\n\n  perform(){\n    let {view, liveSocket, container, html} = this\n    let targetContainer = this.isCIDPatch() ? this.targetCIDContainer(html) : container\n    if(this.isCIDPatch() && !targetContainer){ return }\n\n    let focused = liveSocket.getActiveElement()\n    let {selectionStart, selectionEnd} = focused && DOM.hasSelectionRange(focused) ? focused : {}\n    let phxUpdate = liveSocket.binding(PHX_UPDATE)\n    let phxFeedbackFor = liveSocket.binding(PHX_FEEDBACK_FOR)\n    let disableWith = liveSocket.binding(PHX_DISABLE_WITH)\n    let phxTriggerExternal = liveSocket.binding(PHX_TRIGGER_ACTION)\n    let phxRemove = liveSocket.binding(\"remove\")\n    let added = []\n    let updates = []\n    let appendPrependUpdates = []\n    let pendingRemoves = []\n    let externalFormTriggered = null\n\n    let diffHTML = liveSocket.time(\"premorph container prep\", () => {\n      return this.buildDiffHTML(container, html, phxUpdate, targetContainer)\n    })\n\n    this.trackBefore(\"added\", container)\n    this.trackBefore(\"updated\", container, container)\n\n    liveSocket.time(\"morphdom\", () => {\n      morphdom(targetContainer, diffHTML, {\n        childrenOnly: targetContainer.getAttribute(PHX_COMPONENT) === null,\n        getNodeKey: (node) => {\n          return DOM.isPhxDestroyed(node) ? null : node.id\n        },\n        onBeforeNodeAdded: (el) => {\n          this.trackBefore(\"added\", el)\n          return el\n        },\n        onNodeAdded: (el) => {\n          // hack to fix Safari handling of img srcset and video tags\n          if(el instanceof HTMLImageElement && el.srcset){\n            el.srcset = el.srcset\n          } else if(el instanceof HTMLVideoElement && el.autoplay){\n            el.play()\n          }\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          //input handling\n          DOM.discardError(targetContainer, el, phxFeedbackFor)\n          // nested view handling\n          if((DOM.isPhxChild(el) && view.ownsElement(el)) || DOM.isPhxSticky(el) && view.ownsElement(el.parentNode)){\n            this.trackAfter(\"phxChildAdded\", el)\n          }\n          added.push(el)\n        },\n        onNodeDiscarded: (el) => {\n          // nested view handling\n          if(DOM.isPhxChild(el) || DOM.isPhxSticky(el)){ liveSocket.destroyViewByEl(el) }\n          this.trackAfter(\"discarded\", el)\n        },\n        onBeforeNodeDiscarded: (el) => {\n          if(el.getAttribute && el.getAttribute(PHX_PRUNE) !== null){ return true }\n          if(el.parentNode !== null && DOM.isPhxUpdate(el.parentNode, phxUpdate, [\"append\", \"prepend\"]) && el.id){ return false }\n          if(el.getAttribute && el.getAttribute(phxRemove)){\n            pendingRemoves.push(el)\n            return false\n          }\n          if(this.skipCIDSibling(el)){ return false }\n          return true\n        },\n        onElUpdated: (el) => {\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          updates.push(el)\n        },\n        onBeforeElUpdated: (fromEl, toEl) => {\n          DOM.cleanChildNodes(toEl, phxUpdate)\n          if(this.skipCIDSibling(toEl)){ return false }\n          if(DOM.isPhxSticky(fromEl)){ return false }\n          if(DOM.isIgnored(fromEl, phxUpdate) || (fromEl.form && fromEl.form.isSameNode(externalFormTriggered))){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeAttrs(fromEl, toEl, {isIgnored: true})\n            updates.push(fromEl)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n          if(fromEl.type === \"number\" && (fromEl.validity && fromEl.validity.badInput)){ return false }\n          if(!DOM.syncPendingRef(fromEl, toEl, disableWith)){\n            if(DOM.isUploadInput(fromEl)){\n              this.trackBefore(\"updated\", fromEl, toEl)\n              updates.push(fromEl)\n            }\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n\n          // nested view handling\n          if(DOM.isPhxChild(toEl)){\n            let prevSession = fromEl.getAttribute(PHX_SESSION)\n            DOM.mergeAttrs(fromEl, toEl, {exclude: [PHX_STATIC]})\n            if(prevSession !== \"\"){ fromEl.setAttribute(PHX_SESSION, prevSession) }\n            fromEl.setAttribute(PHX_ROOT_ID, this.rootID)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n\n          // input handling\n          DOM.copyPrivates(toEl, fromEl)\n          DOM.discardError(targetContainer, toEl, phxFeedbackFor)\n\n          let isFocusedFormEl = focused && fromEl.isSameNode(focused) && DOM.isFormInput(fromEl)\n          if(isFocusedFormEl){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeFocusedInput(fromEl, toEl)\n            DOM.syncAttrsToProps(fromEl)\n            updates.push(fromEl)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          } else {\n            if(DOM.isPhxUpdate(toEl, phxUpdate, [\"append\", \"prepend\"])){\n              appendPrependUpdates.push(new DOMPostMorphRestorer(fromEl, toEl, toEl.getAttribute(phxUpdate)))\n            }\n            DOM.syncAttrsToProps(toEl)\n            DOM.applyStickyOperations(toEl)\n            this.trackBefore(\"updated\", fromEl, toEl)\n            return true\n          }\n        }\n      })\n    })\n\n    if(liveSocket.isDebugEnabled()){ detectDuplicateIds() }\n\n    if(appendPrependUpdates.length > 0){\n      liveSocket.time(\"post-morph append/prepend restoration\", () => {\n        appendPrependUpdates.forEach(update => update.perform())\n      })\n    }\n\n    liveSocket.silenceEvents(() => DOM.restoreFocus(focused, selectionStart, selectionEnd))\n    DOM.dispatchEvent(document, \"phx:update\")\n    added.forEach(el => this.trackAfter(\"added\", el))\n    updates.forEach(el => this.trackAfter(\"updated\", el))\n\n    if(pendingRemoves.length > 0){\n      liveSocket.transitionRemoves(pendingRemoves)\n      liveSocket.requestDOMUpdate(() => {\n        pendingRemoves.forEach(el => {\n          let child = DOM.firstPhxChild(el)\n          if(child){ liveSocket.destroyViewByEl(child) }\n          el.remove()\n        })\n        this.trackAfter(\"transitionsDiscarded\", pendingRemoves)\n      })\n    }\n\n    if(externalFormTriggered){\n      liveSocket.disconnect()\n      externalFormTriggered.submit()\n    }\n    return true\n  }\n\n  isCIDPatch(){ return this.cidPatch }\n\n  skipCIDSibling(el){\n    return el.nodeType === Node.ELEMENT_NODE && el.getAttribute(PHX_SKIP) !== null\n  }\n\n  targetCIDContainer(html){\n    if(!this.isCIDPatch()){ return }\n    let [first, ...rest] = DOM.findComponentNodeList(this.container, this.targetCID)\n    if(rest.length === 0 && DOM.childNodeLength(html) === 1){\n      return first\n    } else {\n      return first && first.parentNode\n    }\n  }\n\n  // builds HTML for morphdom patch\n  // - for full patches of LiveView or a component with a single\n  //   root node, simply returns the HTML\n  // - for patches of a component with multiple root nodes, the\n  //   parent node becomes the target container and non-component\n  //   siblings are marked as skip.\n  buildDiffHTML(container, html, phxUpdate, targetContainer){\n    let isCIDPatch = this.isCIDPatch()\n    let isCIDWithSingleRoot = isCIDPatch && targetContainer.getAttribute(PHX_COMPONENT) === this.targetCID.toString()\n    if(!isCIDPatch || isCIDWithSingleRoot){\n      return html\n    } else {\n      // component patch with multiple CID roots\n      let diffContainer = null\n      let template = document.createElement(\"template\")\n      diffContainer = DOM.cloneNode(targetContainer)\n      let [firstComponent, ...rest] = DOM.findComponentNodeList(diffContainer, this.targetCID)\n      template.innerHTML = html\n      rest.forEach(el => el.remove())\n      Array.from(diffContainer.childNodes).forEach(child => {\n        // we can only skip trackable nodes with an ID\n        if(child.id && child.nodeType === Node.ELEMENT_NODE && child.getAttribute(PHX_COMPONENT) !== this.targetCID.toString()){\n          child.setAttribute(PHX_SKIP, \"\")\n          child.innerHTML = \"\"\n        }\n      })\n      Array.from(template.content.childNodes).forEach(el => diffContainer.insertBefore(el, firstComponent))\n      firstComponent.remove()\n      return diffContainer.outerHTML\n    }\n  }\n}\n", "import {\n  COMPONENTS,\n  DYNAMICS,\n  TEMPLATES,\n  EVENTS,\n  PHX_COMPONENT,\n  PHX_SKIP,\n  REPLY,\n  STATIC,\n  TITLE\n} from \"./constants\"\n\nimport {\n  isObject,\n  logError,\n  isCid,\n} from \"./utils\"\n\nexport default class Rendered {\n  static extract(diff){\n    let {[REPLY]: reply, [EVENTS]: events, [TITLE]: title} = diff\n    delete diff[REPLY]\n    delete diff[EVENTS]\n    delete diff[TITLE]\n    return {diff, title, reply: reply || null, events: events || []}\n  }\n\n  constructor(viewId, rendered){\n    this.viewId = viewId\n    this.rendered = {}\n    this.mergeDiff(rendered)\n  }\n\n  parentViewId(){ return this.viewId }\n\n  toString(onlyCids){\n    return this.recursiveToString(this.rendered, this.rendered[COMPONENTS], onlyCids)\n  }\n\n  recursiveToString(rendered, components = rendered[COMPONENTS], onlyCids){\n    onlyCids = onlyCids ? new Set(onlyCids) : null\n    let output = {buffer: \"\", components: components, onlyCids: onlyCids}\n    this.toOutputBuffer(rendered, null, output)\n    return output.buffer\n  }\n\n  componentCIDs(diff){ return Object.keys(diff[COMPONENTS] || {}).map(i => parseInt(i)) }\n\n  isComponentOnlyDiff(diff){\n    if(!diff[COMPONENTS]){ return false }\n    return Object.keys(diff).length === 1\n  }\n\n  getComponent(diff, cid){ return diff[COMPONENTS][cid] }\n\n  mergeDiff(diff){\n    let newc = diff[COMPONENTS]\n    let cache = {}\n    delete diff[COMPONENTS]\n    this.rendered = this.mutableMerge(this.rendered, diff)\n    this.rendered[COMPONENTS] = this.rendered[COMPONENTS] || {}\n\n    if(newc){\n      let oldc = this.rendered[COMPONENTS]\n\n      for(let cid in newc){\n        newc[cid] = this.cachedFindComponent(cid, newc[cid], oldc, newc, cache)\n      }\n\n      for(let cid in newc){ oldc[cid] = newc[cid] }\n      diff[COMPONENTS] = newc\n    }\n  }\n\n  cachedFindComponent(cid, cdiff, oldc, newc, cache){\n    if(cache[cid]){\n      return cache[cid]\n    } else {\n      let ndiff, stat, scid = cdiff[STATIC]\n\n      if(isCid(scid)){\n        let tdiff\n\n        if(scid > 0){\n          tdiff = this.cachedFindComponent(scid, newc[scid], oldc, newc, cache)\n        } else {\n          tdiff = oldc[-scid]\n        }\n\n        stat = tdiff[STATIC]\n        ndiff = this.cloneMerge(tdiff, cdiff)\n        ndiff[STATIC] = stat\n      } else {\n        ndiff = cdiff[STATIC] !== undefined ? cdiff : this.cloneMerge(oldc[cid] || {}, cdiff)\n      }\n\n      cache[cid] = ndiff\n      return ndiff\n    }\n  }\n\n  mutableMerge(target, source){\n    if(source[STATIC] !== undefined){\n      return source\n    } else {\n      this.doMutableMerge(target, source)\n      return target\n    }\n  }\n\n  doMutableMerge(target, source){\n    for(let key in source){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        this.doMutableMerge(targetVal, val)\n      } else {\n        target[key] = val\n      }\n    }\n  }\n\n  cloneMerge(target, source){\n    let merged = {...target, ...source}\n    for(let key in merged){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        merged[key] = this.cloneMerge(targetVal, val)\n      }\n    }\n    return merged\n  }\n\n  componentToString(cid){ return this.recursiveCIDToString(this.rendered[COMPONENTS], cid) }\n\n  pruneCIDs(cids){\n    cids.forEach(cid => delete this.rendered[COMPONENTS][cid])\n  }\n\n  // private\n\n  get(){ return this.rendered }\n\n  isNewFingerprint(diff = {}){ return !!diff[STATIC] }\n\n  templateStatic(part, templates){\n    if(typeof (part) === \"number\") {\n      return templates[part]\n    } else {\n      return part\n    }\n  }\n\n  toOutputBuffer(rendered, templates, output){\n    if(rendered[DYNAMICS]){ return this.comprehensionToBuffer(rendered, templates, output) }\n    let {[STATIC]: statics} = rendered\n    statics = this.templateStatic(statics, templates)\n\n    output.buffer += statics[0]\n    for(let i = 1; i < statics.length; i++){\n      this.dynamicToBuffer(rendered[i - 1], templates, output)\n      output.buffer += statics[i]\n    }\n  }\n\n  comprehensionToBuffer(rendered, templates, output){\n    let {[DYNAMICS]: dynamics, [STATIC]: statics} = rendered\n    statics = this.templateStatic(statics, templates)\n    let compTemplates = templates || rendered[TEMPLATES]\n\n    for(let d = 0; d < dynamics.length; d++){\n      let dynamic = dynamics[d]\n      output.buffer += statics[0]\n      for(let i = 1; i < statics.length; i++){\n        this.dynamicToBuffer(dynamic[i - 1], compTemplates, output)\n        output.buffer += statics[i]\n      }\n    }\n  }\n\n  dynamicToBuffer(rendered, templates, output){\n    if(typeof (rendered) === \"number\"){\n      output.buffer += this.recursiveCIDToString(output.components, rendered, output.onlyCids)\n    } else if(isObject(rendered)){\n      this.toOutputBuffer(rendered, templates, output)\n    } else {\n      output.buffer += rendered\n    }\n  }\n\n  recursiveCIDToString(components, cid, onlyCids){\n    let component = components[cid] || logError(`no component for CID ${cid}`, components)\n    let template = document.createElement(\"template\")\n    template.innerHTML = this.recursiveToString(component, components, onlyCids)\n    let container = template.content\n    let skip = onlyCids && !onlyCids.has(cid)\n\n    let [hasChildNodes, hasChildComponents] =\n      Array.from(container.childNodes).reduce(([hasNodes, hasComponents], child, i) => {\n        if(child.nodeType === Node.ELEMENT_NODE){\n          if(child.getAttribute(PHX_COMPONENT)){\n            return [hasNodes, true]\n          }\n          child.setAttribute(PHX_COMPONENT, cid)\n          if(!child.id){ child.id = `${this.parentViewId()}-${cid}-${i}` }\n          if(skip){\n            child.setAttribute(PHX_SKIP, \"\")\n            child.innerHTML = \"\"\n          }\n          return [true, hasComponents]\n        } else {\n          if(child.nodeValue.trim() !== \"\"){\n            logError(\"only HTML element tags are allowed at the root of components.\\n\\n\" +\n              `got: \"${child.nodeValue.trim()}\"\\n\\n` +\n              \"within:\\n\", template.innerHTML.trim())\n            child.replaceWith(this.createSpan(child.nodeValue, cid))\n            return [true, hasComponents]\n          } else {\n            child.remove()\n            return [hasNodes, hasComponents]\n          }\n        }\n      }, [false, false])\n\n    if(!hasChildNodes && !hasChildComponents){\n      logError(\"expected at least one HTML element tag inside a component, but the component is empty:\\n\",\n        template.innerHTML.trim())\n      return this.createSpan(\"\", cid).outerHTML\n    } else if(!hasChildNodes && hasChildComponents){\n      logError(\"expected at least one HTML element tag directly inside a component, but only subcomponents were found. A component must render at least one HTML tag directly inside itself.\",\n        template.innerHTML.trim())\n      return template.innerHTML\n    } else {\n      return template.innerHTML\n    }\n  }\n\n  createSpan(text, cid){\n    let span = document.createElement(\"span\")\n    span.innerText = text\n    span.setAttribute(PHX_COMPONENT, cid)\n    return span\n  }\n}\n", "let viewHookID = 1\nexport default class ViewHook {\n  static makeID(){ return viewHookID++ }\n  static elementID(el){ return el.phxHookId }\n\n  constructor(view, el, callbacks){\n    this.__view = view\n    this.liveSocket = view.liveSocket\n    this.__callbacks = callbacks\n    this.__listeners = new Set()\n    this.__isDisconnected = false\n    this.el = el\n    this.el.phxHookId = this.constructor.makeID()\n    for(let key in this.__callbacks){ this[key] = this.__callbacks[key] }\n  }\n\n  __mounted(){ this.mounted && this.mounted() }\n  __updated(){ this.updated && this.updated() }\n  __beforeUpdate(){ this.beforeUpdate && this.beforeUpdate() }\n  __destroyed(){ this.destroyed && this.destroyed() }\n  __reconnected(){\n    if(this.__isDisconnected){\n      this.__isDisconnected = false\n      this.reconnected && this.reconnected()\n    }\n  }\n  __disconnected(){\n    this.__isDisconnected = true\n    this.disconnected && this.disconnected()\n  }\n\n  pushEvent(event, payload = {}, onReply = function (){ }){\n    return this.__view.pushHookEvent(null, event, payload, onReply)\n  }\n\n  pushEventTo(phxTarget, event, payload = {}, onReply = function (){ }){\n    return this.__view.withinTargets(phxTarget, (view, targetCtx) => {\n      return view.pushHookEvent(targetCtx, event, payload, onReply)\n    })\n  }\n\n  handleEvent(event, callback){\n    let callbackRef = (customEvent, bypass) => bypass ? event : callback(customEvent.detail)\n    window.addEventListener(`phx:${event}`, callbackRef)\n    this.__listeners.add(callbackRef)\n    return callbackRef\n  }\n\n  removeHandleEvent(callbackRef){\n    let event = callbackRef(null, true)\n    window.removeEventListener(`phx:${event}`, callbackRef)\n    this.__listeners.delete(callbackRef)\n  }\n\n  upload(name, files){\n    return this.__view.dispatchUploads(name, files)\n  }\n\n  uploadTo(phxTarget, name, files){\n    return this.__view.withinTargets(phxTarget, view => view.dispatchUploads(name, files))\n  }\n\n  __cleanup__(){\n    this.__listeners.forEach(callbackRef => this.removeHandleEvent(callbackRef))\n  }\n}\n", "import DOM from \"./dom\"\nimport ARIA from \"./aria\"\n\nlet focusStack = null\n\nlet JS = {\n  exec(eventType, phxEvent, view, sourceEl, defaults){\n    let [defaultKind, defaultArgs] = defaults || [null, {}]\n    let commands = phxEvent.charAt(0) === \"[\" ?\n      JSON.parse(phxEvent) : [[defaultKind, defaultArgs]]\n\n    commands.forEach(([kind, args]) => {\n      if(kind === defaultKind && defaultArgs.data){\n        args.data = Object.assign(args.data || {}, defaultArgs.data)\n      }\n      this.filterToEls(sourceEl, args).forEach(el => {\n        this[`exec_${kind}`](eventType, phxEvent, view, sourceEl, el, args)\n      })\n    })\n  },\n\n  isVisible(el){\n    return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length > 0)\n  },\n\n  // private\n\n  // commands\n\n  exec_dispatch(eventType, phxEvent, view, sourceEl, el, {to, event, detail, bubbles}){\n    detail = detail || {}\n    detail.dispatcher = sourceEl\n    DOM.dispatchEvent(el, event, {detail, bubbles})\n  },\n\n  exec_push(eventType, phxEvent, view, sourceEl, el, args){\n    if(!view.isConnected()){ return }\n\n    let {event, data, target, page_loading, loading, value, dispatcher} = args\n    let pushOpts = {loading, value, target, page_loading: !!page_loading}\n    let targetSrc = eventType === \"change\" && dispatcher ? dispatcher : sourceEl\n    let phxTarget = target || targetSrc.getAttribute(view.binding(\"target\")) || targetSrc\n    view.withinTargets(phxTarget, (targetView, targetCtx) => {\n      if(eventType === \"change\"){\n        let {newCid, _target, callback} = args\n        _target = _target || (sourceEl instanceof HTMLInputElement ? sourceEl.name : undefined)\n        if(_target){ pushOpts._target = _target }\n        targetView.pushInput(sourceEl, targetCtx, newCid, event || phxEvent, pushOpts, callback)\n      } else if(eventType === \"submit\"){\n        targetView.submitForm(sourceEl, targetCtx, event || phxEvent, pushOpts)\n      } else {\n        targetView.pushEvent(eventType, sourceEl, targetCtx, event || phxEvent, data, pushOpts)\n      }\n    })\n  },\n\n  exec_navigate(eventType, phxEvent, view, sourceEl, el, {href, replace}){\n    view.liveSocket.historyRedirect(href, replace ? \"replace\" : \"push\")\n  },\n\n  exec_patch(eventType, phxEvent, view, sourceEl, el, {href, replace}){\n    view.liveSocket.pushHistoryPatch(href, replace ? \"replace\" : \"push\", sourceEl)\n  },\n\n  exec_focus(eventType, phxEvent, view, sourceEl, el){\n    window.requestAnimationFrame(() => ARIA.attemptFocus(el))\n  },\n\n  exec_focus_first(eventType, phxEvent, view, sourceEl, el){\n    window.requestAnimationFrame(() => ARIA.focusFirstInteractive(el) || ARIA.focusFirst(el))\n  },\n\n  exec_push_focus(eventType, phxEvent, view, sourceEl, el){\n    window.requestAnimationFrame(() => focusStack = el || sourceEl)\n  },\n\n  exec_pop_focus(eventType, phxEvent, view, sourceEl, el){\n    window.requestAnimationFrame(() => {\n      if(focusStack){ focusStack.focus() }\n      focusStack = null\n    })\n  },\n\n  exec_add_class(eventType, phxEvent, view, sourceEl, el, {names, transition, time}){\n    this.addOrRemoveClasses(el, names, [], transition, time, view)\n  },\n\n  exec_remove_class(eventType, phxEvent, view, sourceEl, el, {names, transition, time}){\n    this.addOrRemoveClasses(el, [], names, transition, time, view)\n  },\n\n  exec_transition(eventType, phxEvent, view, sourceEl, el, {time, transition}){\n    let [transition_start, running, transition_end] = transition\n    let onStart = () => this.addOrRemoveClasses(el, transition_start.concat(running), [])\n    let onDone = () => this.addOrRemoveClasses(el, transition_end, transition_start.concat(running))\n    view.transition(time, onStart, onDone)\n  },\n\n  exec_toggle(eventType, phxEvent, view, sourceEl, el, {display, ins, outs, time}){\n    this.toggle(eventType, view, el, display, ins, outs, time)\n  },\n\n  exec_show(eventType, phxEvent, view, sourceEl, el, {display, transition, time}){\n    this.show(eventType, view, el, display, transition, time)\n  },\n\n  exec_hide(eventType, phxEvent, view, sourceEl, el, {display, transition, time}){\n    this.hide(eventType, view, el, display, transition, time)\n  },\n\n  exec_set_attr(eventType, phxEvent, view, sourceEl, el, {attr: [attr, val]}){\n    this.setOrRemoveAttrs(el, [[attr, val]], [])\n  },\n\n  exec_remove_attr(eventType, phxEvent, view, sourceEl, el, {attr}){\n    this.setOrRemoveAttrs(el, [], [attr])\n  },\n\n  // utils for commands\n\n  show(eventType, view, el, display, transition, time){\n    if(!this.isVisible(el)){\n      this.toggle(eventType, view, el, display, transition, null, time)\n    }\n  },\n\n  hide(eventType, view, el, display, transition, time){\n    if(this.isVisible(el)){\n      this.toggle(eventType, view, el, display, null, transition, time)\n    }\n  },\n\n  toggle(eventType, view, el, display, ins, outs, time){\n    let [inClasses, inStartClasses, inEndClasses] = ins || [[], [], []]\n    let [outClasses, outStartClasses, outEndClasses] = outs || [[], [], []]\n    if(inClasses.length > 0 || outClasses.length > 0){\n      if(this.isVisible(el)){\n        let onStart = () => {\n          this.addOrRemoveClasses(el, outStartClasses, inClasses.concat(inStartClasses).concat(inEndClasses))\n          window.requestAnimationFrame(() => {\n            this.addOrRemoveClasses(el, outClasses, [])\n            window.requestAnimationFrame(() => this.addOrRemoveClasses(el, outEndClasses, outStartClasses))\n          })\n        }\n        el.dispatchEvent(new Event(\"phx:hide-start\"))\n        view.transition(time, onStart, () => {\n          this.addOrRemoveClasses(el, [], outClasses.concat(outEndClasses))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = \"none\")\n          el.dispatchEvent(new Event(\"phx:hide-end\"))\n        })\n      } else {\n        if(eventType === \"remove\"){ return }\n        let onStart = () => {\n          this.addOrRemoveClasses(el, inStartClasses, outClasses.concat(outStartClasses).concat(outEndClasses))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = (display || \"block\"))\n          window.requestAnimationFrame(() => {\n            this.addOrRemoveClasses(el, inClasses, [])\n            window.requestAnimationFrame(() => this.addOrRemoveClasses(el, inEndClasses, inStartClasses))\n          })\n        }\n        el.dispatchEvent(new Event(\"phx:show-start\"))\n        view.transition(time, onStart, () => {\n          this.addOrRemoveClasses(el, [], inClasses.concat(inEndClasses))\n          el.dispatchEvent(new Event(\"phx:show-end\"))\n        })\n      }\n    } else {\n      if(this.isVisible(el)){\n        window.requestAnimationFrame(() => {\n          el.dispatchEvent(new Event(\"phx:hide-start\"))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = \"none\")\n          el.dispatchEvent(new Event(\"phx:hide-end\"))\n        })\n      } else {\n        window.requestAnimationFrame(() => {\n          el.dispatchEvent(new Event(\"phx:show-start\"))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = display || \"block\")\n          el.dispatchEvent(new Event(\"phx:show-end\"))\n        })\n      }\n    }\n  },\n\n  addOrRemoveClasses(el, adds, removes, transition, time, view){\n    let [transition_run, transition_start, transition_end] = transition || [[], [], []]\n    if(transition_run.length > 0){\n      let onStart = () => this.addOrRemoveClasses(el, transition_start.concat(transition_run), [])\n      let onDone = () => this.addOrRemoveClasses(el, adds.concat(transition_end), removes.concat(transition_run).concat(transition_start))\n      return view.transition(time, onStart, onDone)\n    }\n    window.requestAnimationFrame(() => {\n      let [prevAdds, prevRemoves] = DOM.getSticky(el, \"classes\", [[], []])\n      let keepAdds = adds.filter(name => prevAdds.indexOf(name) < 0 && !el.classList.contains(name))\n      let keepRemoves = removes.filter(name => prevRemoves.indexOf(name) < 0 && el.classList.contains(name))\n      let newAdds = prevAdds.filter(name => removes.indexOf(name) < 0).concat(keepAdds)\n      let newRemoves = prevRemoves.filter(name => adds.indexOf(name) < 0).concat(keepRemoves)\n\n      DOM.putSticky(el, \"classes\", currentEl => {\n        currentEl.classList.remove(...newRemoves)\n        currentEl.classList.add(...newAdds)\n        return [newAdds, newRemoves]\n      })\n    })\n  },\n\n  setOrRemoveAttrs(el, sets, removes){\n    let [prevSets, prevRemoves] = DOM.getSticky(el, \"attrs\", [[], []])\n\n    let alteredAttrs = sets.map(([attr, _val]) => attr).concat(removes);\n    let newSets = prevSets.filter(([attr, _val]) => !alteredAttrs.includes(attr)).concat(sets);\n    let newRemoves = prevRemoves.filter((attr) => !alteredAttrs.includes(attr)).concat(removes);\n\n    DOM.putSticky(el, \"attrs\", currentEl => {\n      newRemoves.forEach(attr => currentEl.removeAttribute(attr))\n      newSets.forEach(([attr, val]) => currentEl.setAttribute(attr, val))\n      return [newSets, newRemoves]\n    })\n  },\n\n  hasAllClasses(el, classes){ return classes.every(name => el.classList.contains(name)) },\n\n  isToggledOut(el, outClasses){\n    return !this.isVisible(el) || this.hasAllClasses(el, outClasses)\n  },\n\n  filterToEls(sourceEl, {to}){\n    return to ? DOM.all(document, to) : [sourceEl]\n  }\n}\n\nexport default JS\n", "import {\n  BEFORE_UNLOAD_LOADER_TIMEOUT,\n  CHECKABLE_INPUTS,\n  CONSECUTIVE_RELOADS,\n  PHX_AUTO_RECOVER,\n  PHX_COMPONENT,\n  PHX_CONNECTED_CLASS,\n  PHX_DISABLE_WITH,\n  PHX_DISABLE_WITH_RESTORE,\n  PHX_DISABLED,\n  PHX_DISCONNECTED_CLASS,\n  PHX_EVENT_CLASSES,\n  PHX_ERROR_CLASS,\n  PHX_FEEDBACK_FOR,\n  PHX_HAS_SUBMITTED,\n  PHX_HOOK,\n  PHX_PAGE_LOADING,\n  PHX_PARENT_ID,\n  PHX_PROGRESS,\n  PHX_READONLY,\n  PHX_REF,\n  PHX_REF_SRC,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_TRACK_STATIC,\n  PHX_TRACK_UPLOADS,\n  PHX_UPDATE,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PHX_MAIN,\n  PHX_MOUNTED,\n  PUSH_TIMEOUT,\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  isEmpty,\n  isEqualObj,\n  logError,\n  maybe,\n  isCid,\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport DOMPatch from \"./dom_patch\"\nimport LiveUploader from \"./live_uploader\"\nimport Rendered from \"./rendered\"\nimport ViewHook from \"./view_hook\"\nimport JS from \"./js\"\n\nlet serializeForm = (form, meta, onlyNames = []) => {\n  let formData = new FormData(form)\n  let toRemove = []\n\n  formData.forEach((val, key, _index) => {\n    if(val instanceof File){ toRemove.push(key) }\n  })\n\n  // Cleanup after building fileData\n  toRemove.forEach(key => formData.delete(key))\n\n  let params = new URLSearchParams()\n  for(let [key, val] of formData.entries()){\n    if(onlyNames.length === 0 || onlyNames.indexOf(key) >= 0){\n      params.append(key, val)\n    }\n  }\n  for(let metaKey in meta){ params.append(metaKey, meta[metaKey]) }\n\n  return params.toString()\n}\n\nexport default class View {\n  constructor(el, liveSocket, parentView, flash, liveReferer){\n    this.isDead = false\n    this.liveSocket = liveSocket\n    this.flash = flash\n    this.parent = parentView\n    this.root = parentView ? parentView.root : this\n    this.el = el\n    this.id = this.el.id\n    this.ref = 0\n    this.childJoins = 0\n    this.loaderTimer = null\n    this.pendingDiffs = []\n    this.pruningCIDs = []\n    this.redirect = false\n    this.href = null\n    this.joinCount = this.parent ? this.parent.joinCount - 1 : 0\n    this.joinPending = true\n    this.destroyed = false\n    this.joinCallback = function(onDone){ onDone && onDone() }\n    this.stopCallback = function(){ }\n    this.pendingJoinOps = this.parent ? null : []\n    this.viewHooks = {}\n    this.uploaders = {}\n    this.formSubmits = []\n    this.children = this.parent ? null : {}\n    this.root.children[this.id] = {}\n    this.channel = this.liveSocket.channel(`lv:${this.id}`, () => {\n      return {\n        redirect: this.redirect ? this.href : undefined,\n        url: this.redirect ? undefined : this.href || undefined,\n        params: this.connectParams(liveReferer),\n        session: this.getSession(),\n        static: this.getStatic(),\n        flash: this.flash,\n      }\n    })\n    this.showLoader(this.liveSocket.loaderTimeout)\n    this.bindChannel()\n  }\n\n  setHref(href){ this.href = href }\n\n  setRedirect(href){\n    this.redirect = true\n    this.href = href\n  }\n\n  isMain(){ return this.el.getAttribute(PHX_MAIN) !== null }\n\n  connectParams(liveReferer){\n    let params = this.liveSocket.params(this.el)\n    let manifest =\n      DOM.all(document, `[${this.binding(PHX_TRACK_STATIC)}]`)\n        .map(node => node.src || node.href).filter(url => typeof (url) === \"string\")\n\n    if(manifest.length > 0){ params[\"_track_static\"] = manifest }\n    params[\"_mounts\"] = this.joinCount\n    params[\"_live_referer\"] = liveReferer\n\n    return params\n  }\n\n  isConnected(){ return this.channel.canPush() }\n\n  getSession(){ return this.el.getAttribute(PHX_SESSION) }\n\n  getStatic(){\n    let val = this.el.getAttribute(PHX_STATIC)\n    return val === \"\" ? null : val\n  }\n\n  destroy(callback = function (){ }){\n    this.destroyAllChildren()\n    this.destroyed = true\n    delete this.root.children[this.id]\n    if(this.parent){ delete this.root.children[this.parent.id][this.id] }\n    clearTimeout(this.loaderTimer)\n    let onFinished = () => {\n      callback()\n      for(let id in this.viewHooks){\n        this.destroyHook(this.viewHooks[id])\n      }\n    }\n\n    DOM.markPhxChildDestroyed(this.el)\n\n    this.log(\"destroyed\", () => [\"the child has been removed from the parent\"])\n    this.channel.leave()\n      .receive(\"ok\", onFinished)\n      .receive(\"error\", onFinished)\n      .receive(\"timeout\", onFinished)\n  }\n\n  setContainerClasses(...classes){\n    this.el.classList.remove(\n      PHX_CONNECTED_CLASS,\n      PHX_DISCONNECTED_CLASS,\n      PHX_ERROR_CLASS\n    )\n    this.el.classList.add(...classes)\n  }\n\n  showLoader(timeout){\n    clearTimeout(this.loaderTimer)\n    if(timeout){\n      this.loaderTimer = setTimeout(() => this.showLoader(), timeout)\n    } else {\n      for(let id in this.viewHooks){ this.viewHooks[id].__disconnected() }\n      this.setContainerClasses(PHX_DISCONNECTED_CLASS)\n    }\n  }\n\n  execAll(binding){\n    DOM.all(this.el, `[${binding}]`, el => this.liveSocket.execJS(el, el.getAttribute(binding)))\n  }\n\n  hideLoader(){\n    clearTimeout(this.loaderTimer)\n    this.setContainerClasses(PHX_CONNECTED_CLASS)\n    this.execAll(this.binding(\"connected\"))\n  }\n\n  triggerReconnected(){\n    for(let id in this.viewHooks){ this.viewHooks[id].__reconnected() }\n  }\n\n  log(kind, msgCallback){\n    this.liveSocket.log(this, kind, msgCallback)\n  }\n\n  transition(time, onStart, onDone = function(){}){\n    this.liveSocket.transition(time, onStart, onDone)\n  }\n\n  withinTargets(phxTarget, callback){\n    if(phxTarget instanceof HTMLElement || phxTarget instanceof SVGElement){\n      return this.liveSocket.owner(phxTarget, view => callback(view, phxTarget))\n    }\n\n    if(isCid(phxTarget)){\n      let targets = DOM.findComponentNodeList(this.el, phxTarget)\n      if(targets.length === 0){\n        logError(`no component found matching phx-target of ${phxTarget}`)\n      } else {\n        callback(this, parseInt(phxTarget))\n      }\n    } else {\n      let targets = Array.from(document.querySelectorAll(phxTarget))\n      if(targets.length === 0){ logError(`nothing found matching the phx-target selector \"${phxTarget}\"`) }\n      targets.forEach(target => this.liveSocket.owner(target, view => callback(view, target)))\n    }\n  }\n\n  applyDiff(type, rawDiff, callback){\n    this.log(type, () => [\"\", clone(rawDiff)])\n    let {diff, reply, events, title} = Rendered.extract(rawDiff)\n    if(title){ DOM.putTitle(title) }\n\n    callback({diff, reply, events})\n  }\n\n  onJoin(resp){\n    let {rendered, container} = resp\n    if(container){\n      let [tag, attrs] = container\n      this.el = DOM.replaceRootContainer(this.el, tag, attrs)\n    }\n    this.childJoins = 0\n    this.joinPending = true\n    this.flash = null\n\n    Browser.dropLocal(this.liveSocket.localStorage, window.location.pathname, CONSECUTIVE_RELOADS)\n    this.applyDiff(\"mount\", rendered, ({diff, events}) => {\n      this.rendered = new Rendered(this.id, diff)\n      let html = this.renderContainer(null, \"join\")\n      this.dropPendingRefs()\n      let forms = this.formsForRecovery(html)\n      this.joinCount++\n\n      if(forms.length > 0){\n        forms.forEach(([form, newForm, newCid], i) => {\n          this.pushFormRecovery(form, newCid, resp => {\n            if(i === forms.length - 1){\n              this.onJoinComplete(resp, html, events)\n            }\n          })\n        })\n      } else {\n        this.onJoinComplete(resp, html, events)\n      }\n    })\n  }\n\n  dropPendingRefs(){\n    DOM.all(document, `[${PHX_REF_SRC}=\"${this.id}\"][${PHX_REF}]`, el => {\n      el.removeAttribute(PHX_REF)\n      el.removeAttribute(PHX_REF_SRC)\n    })\n  }\n\n  onJoinComplete({live_patch}, html, events){\n    // In order to provide a better experience, we want to join\n    // all LiveViews first and only then apply their patches.\n    if(this.joinCount > 1 || (this.parent && !this.parent.isJoinPending())){\n      return this.applyJoinPatch(live_patch, html, events)\n    }\n\n    // One downside of this approach is that we need to find phxChildren\n    // in the html fragment, instead of directly on the DOM. The fragment\n    // also does not include PHX_STATIC, so we need to copy it over from\n    // the DOM.\n    let newChildren = DOM.findPhxChildrenInFragment(html, this.id).filter(toEl => {\n      let fromEl = toEl.id && this.el.querySelector(`[id=\"${toEl.id}\"]`)\n      let phxStatic = fromEl && fromEl.getAttribute(PHX_STATIC)\n      if(phxStatic){ toEl.setAttribute(PHX_STATIC, phxStatic) }\n      return this.joinChild(toEl)\n    })\n\n    if(newChildren.length === 0){\n      if(this.parent){\n        this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, events)])\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n        this.applyJoinPatch(live_patch, html, events)\n      }\n    } else {\n      this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, events)])\n    }\n  }\n\n  attachTrueDocEl(){\n    this.el = DOM.byId(this.id)\n    this.el.setAttribute(PHX_ROOT_ID, this.root.id)\n  }\n\n  execNewMounted(){\n    DOM.all(this.el, `[${this.binding(PHX_HOOK)}], [data-phx-${PHX_HOOK}]`, hookEl => {\n      this.maybeAddNewHook(hookEl)\n    })\n    DOM.all(this.el, `[${this.binding(PHX_MOUNTED)}]`, el => this.maybeMounted(el))\n  }\n\n  applyJoinPatch(live_patch, html, events){\n    this.attachTrueDocEl()\n    let patch = new DOMPatch(this, this.el, this.id, html, null)\n    patch.markPrunableContentForRemoval()\n    this.performPatch(patch, false)\n    this.joinNewChildren()\n    this.execNewMounted()\n\n    this.joinPending = false\n    this.liveSocket.dispatchEvents(events)\n    this.applyPendingUpdates()\n\n    if(live_patch){\n      let {kind, to} = live_patch\n      this.liveSocket.historyPatch(to, kind)\n    }\n    this.hideLoader()\n    if(this.joinCount > 1){ this.triggerReconnected() }\n    this.stopCallback()\n  }\n\n  triggerBeforeUpdateHook(fromEl, toEl){\n    this.liveSocket.triggerDOM(\"onBeforeElUpdated\", [fromEl, toEl])\n    let hook = this.getHook(fromEl)\n    let isIgnored = hook && DOM.isIgnored(fromEl, this.binding(PHX_UPDATE))\n    if(hook && !fromEl.isEqualNode(toEl) && !(isIgnored && isEqualObj(fromEl.dataset, toEl.dataset))){\n      hook.__beforeUpdate()\n      return hook\n    }\n  }\n\n  maybeMounted(el){\n    let phxMounted = el.getAttribute(this.binding(PHX_MOUNTED))\n    let hasBeenInvoked = phxMounted && DOM.private(el, \"mounted\")\n    if(phxMounted && !hasBeenInvoked){\n      this.liveSocket.execJS(el, phxMounted)\n      DOM.putPrivate(el, \"mounted\", true)\n    }\n  }\n\n  maybeAddNewHook(el, force){\n    let newHook = this.addHook(el)\n    if(newHook){ newHook.__mounted() }\n  }\n\n  performPatch(patch, pruneCids){\n    let removedEls = []\n    let phxChildrenAdded = false\n    let updatedHookIds = new Set()\n\n    patch.after(\"added\", el => {\n      this.liveSocket.triggerDOM(\"onNodeAdded\", [el])\n      this.maybeAddNewHook(el)\n      if(el.getAttribute){ this.maybeMounted(el) }\n    })\n\n    patch.after(\"phxChildAdded\", el => {\n      if(DOM.isPhxSticky(el)){\n        this.liveSocket.joinRootViews()\n      } else {\n        phxChildrenAdded = true\n      }\n    })\n\n    patch.before(\"updated\", (fromEl, toEl) => {\n      let hook = this.triggerBeforeUpdateHook(fromEl, toEl)\n      if(hook){ updatedHookIds.add(fromEl.id) }\n    })\n\n    patch.after(\"updated\", el => {\n      if(updatedHookIds.has(el.id)){ this.getHook(el).__updated() }\n    })\n\n    patch.after(\"discarded\", (el) => {\n      if(el.nodeType === Node.ELEMENT_NODE){ removedEls.push(el) }\n    })\n\n    patch.after(\"transitionsDiscarded\", els => this.afterElementsRemoved(els, pruneCids))\n    patch.perform()\n    this.afterElementsRemoved(removedEls, pruneCids)\n\n    return phxChildrenAdded\n  }\n\n  afterElementsRemoved(elements, pruneCids){\n    let destroyedCIDs = []\n    elements.forEach(parent => {\n      let components = DOM.all(parent, `[${PHX_COMPONENT}]`)\n      let hooks = DOM.all(parent, `[${this.binding(PHX_HOOK)}]`)\n      components.concat(parent).forEach(el => {\n        let cid = this.componentID(el)\n        if(isCid(cid) && destroyedCIDs.indexOf(cid) === -1){ destroyedCIDs.push(cid) }\n      })\n      hooks.concat(parent).forEach(hookEl => {\n        let hook = this.getHook(hookEl)\n        hook && this.destroyHook(hook)\n      })\n    })\n    // We should not pruneCids on joins. Otherwise, in case of\n    // rejoins, we may notify cids that no longer belong to the\n    // current LiveView to be removed.\n    if(pruneCids){\n      this.maybePushComponentsDestroyed(destroyedCIDs)\n    }\n  }\n\n  joinNewChildren(){\n    DOM.findPhxChildren(this.el, this.id).forEach(el => this.joinChild(el))\n  }\n\n  getChildById(id){ return this.root.children[this.id][id] }\n\n  getDescendentByEl(el){\n    if(el.id === this.id){\n      return this\n    } else {\n      return this.children[el.getAttribute(PHX_PARENT_ID)][el.id]\n    }\n  }\n\n  destroyDescendent(id){\n    for(let parentId in this.root.children){\n      for(let childId in this.root.children[parentId]){\n        if(childId === id){ return this.root.children[parentId][childId].destroy() }\n      }\n    }\n  }\n\n  joinChild(el){\n    let child = this.getChildById(el.id)\n    if(!child){\n      let view = new View(el, this.liveSocket, this)\n      this.root.children[this.id][view.id] = view\n      view.join()\n      this.childJoins++\n      return true\n    }\n  }\n\n  isJoinPending(){ return this.joinPending }\n\n  ackJoin(_child){\n    this.childJoins--\n\n    if(this.childJoins === 0){\n      if(this.parent){\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n      }\n    }\n  }\n\n  onAllChildJoinsComplete(){\n    this.joinCallback(() => {\n      this.pendingJoinOps.forEach(([view, op]) => {\n        if(!view.isDestroyed()){ op() }\n      })\n      this.pendingJoinOps = []\n    })\n  }\n\n  update(diff, events){\n    if(this.isJoinPending() || (this.liveSocket.hasPendingLink() && this.root.isMain())){\n      return this.pendingDiffs.push({diff, events})\n    }\n\n    this.rendered.mergeDiff(diff)\n    let phxChildrenAdded = false\n\n    // When the diff only contains component diffs, then walk components\n    // and patch only the parent component containers found in the diff.\n    // Otherwise, patch entire LV container.\n    if(this.rendered.isComponentOnlyDiff(diff)){\n      this.liveSocket.time(\"component patch complete\", () => {\n        let parentCids = DOM.findParentCIDs(this.el, this.rendered.componentCIDs(diff))\n        parentCids.forEach(parentCID => {\n          if(this.componentPatch(this.rendered.getComponent(diff, parentCID), parentCID)){ phxChildrenAdded = true }\n        })\n      })\n    } else if(!isEmpty(diff)){\n      this.liveSocket.time(\"full patch complete\", () => {\n        let html = this.renderContainer(diff, \"update\")\n        let patch = new DOMPatch(this, this.el, this.id, html, null)\n        phxChildrenAdded = this.performPatch(patch, true)\n      })\n    }\n\n    this.liveSocket.dispatchEvents(events)\n    if(phxChildrenAdded){ this.joinNewChildren() }\n  }\n\n  renderContainer(diff, kind){\n    return this.liveSocket.time(`toString diff (${kind})`, () => {\n      let tag = this.el.tagName\n      // Don't skip any component in the diff nor any marked as pruned\n      // (as they may have been added back)\n      let cids = diff ? this.rendered.componentCIDs(diff).concat(this.pruningCIDs) : null\n      let html = this.rendered.toString(cids)\n      return `<${tag}>${html}</${tag}>`\n    })\n  }\n\n  componentPatch(diff, cid){\n    if(isEmpty(diff)) return false\n    let html = this.rendered.componentToString(cid)\n    let patch = new DOMPatch(this, this.el, this.id, html, cid)\n    let childrenAdded = this.performPatch(patch, true)\n    return childrenAdded\n  }\n\n  getHook(el){ return this.viewHooks[ViewHook.elementID(el)] }\n\n  addHook(el){\n    if(ViewHook.elementID(el) || !el.getAttribute){ return }\n    let hookName = el.getAttribute(`data-phx-${PHX_HOOK}`) || el.getAttribute(this.binding(PHX_HOOK))\n    if(hookName && !this.ownsElement(el)){ return }\n    let callbacks = this.liveSocket.getHookCallbacks(hookName)\n\n    if(callbacks){\n      if(!el.id){ logError(`no DOM ID for hook \"${hookName}\". Hooks require a unique ID on each element.`, el) }\n      let hook = new ViewHook(this, el, callbacks)\n      this.viewHooks[ViewHook.elementID(hook.el)] = hook\n      return hook\n    } else if(hookName !== null){\n      logError(`unknown hook found for \"${hookName}\"`, el)\n    }\n  }\n\n  destroyHook(hook){\n    hook.__destroyed()\n    hook.__cleanup__()\n    delete this.viewHooks[ViewHook.elementID(hook.el)]\n  }\n\n  applyPendingUpdates(){\n    this.pendingDiffs.forEach(({diff, events}) => this.update(diff, events))\n    this.pendingDiffs = []\n  }\n\n  onChannel(event, cb){\n    this.liveSocket.onChannel(this.channel, event, resp => {\n      if(this.isJoinPending()){\n        this.root.pendingJoinOps.push([this, () => cb(resp)])\n      } else {\n        this.liveSocket.requestDOMUpdate(() => cb(resp))\n      }\n    })\n  }\n\n  bindChannel(){\n    // The diff event should be handled by the regular update operations.\n    // All other operations are queued to be applied only after join.\n    this.liveSocket.onChannel(this.channel, \"diff\", (rawDiff) => {\n      this.liveSocket.requestDOMUpdate(() => {\n        this.applyDiff(\"update\", rawDiff, ({diff, events}) => this.update(diff, events))\n      })\n    })\n    this.onChannel(\"redirect\", ({to, flash}) => this.onRedirect({to, flash}))\n    this.onChannel(\"live_patch\", (redir) => this.onLivePatch(redir))\n    this.onChannel(\"live_redirect\", (redir) => this.onLiveRedirect(redir))\n    this.channel.onError(reason => this.onError(reason))\n    this.channel.onClose(reason => this.onClose(reason))\n  }\n\n  destroyAllChildren(){\n    for(let id in this.root.children[this.id]){\n      this.getChildById(id).destroy()\n    }\n  }\n\n  onLiveRedirect(redir){\n    let {to, kind, flash} = redir\n    let url = this.expandURL(to)\n    this.liveSocket.historyRedirect(url, kind, flash)\n  }\n\n  onLivePatch(redir){\n    let {to, kind} = redir\n    this.href = this.expandURL(to)\n    this.liveSocket.historyPatch(to, kind)\n  }\n\n  expandURL(to){\n    return to.startsWith(\"/\") ? `${window.location.protocol}//${window.location.host}${to}` : to\n  }\n\n  onRedirect({to, flash}){ this.liveSocket.redirect(to, flash) }\n\n  isDestroyed(){ return this.destroyed }\n\n  joinDead(){ this.isDead = true }\n\n  join(callback){\n    if(this.isMain()){\n      this.stopCallback = this.liveSocket.withPageLoading({to: this.href, kind: \"initial\"})\n    }\n    this.joinCallback = (onDone) => {\n      onDone = onDone || function(){}\n      callback ? callback(this.joinCount, onDone) : onDone()\n    }\n    this.liveSocket.wrapPush(this, {timeout: false}, () => {\n      return this.channel.join()\n        .receive(\"ok\", data => {\n          if(!this.isDestroyed()){\n            this.liveSocket.requestDOMUpdate(() => this.onJoin(data))\n          }\n        })\n        .receive(\"error\", resp => !this.isDestroyed() && this.onJoinError(resp))\n        .receive(\"timeout\", () => !this.isDestroyed() && this.onJoinError({reason: \"timeout\"}))\n    })\n  }\n\n  onJoinError(resp){\n    if(resp.reason === \"unauthorized\" || resp.reason === \"stale\"){\n      this.log(\"error\", () => [\"unauthorized live_redirect. Falling back to page request\", resp])\n      return this.onRedirect({to: this.href})\n    }\n    if(resp.redirect || resp.live_redirect){\n      this.joinPending = false\n      this.channel.leave()\n    }\n    if(resp.redirect){ return this.onRedirect(resp.redirect) }\n    if(resp.live_redirect){ return this.onLiveRedirect(resp.live_redirect) }\n    this.log(\"error\", () => [\"unable to join\", resp])\n    if(this.liveSocket.isConnected()){ this.liveSocket.reloadWithJitter(this) }\n  }\n\n  onClose(reason){\n    if(this.isDestroyed()){ return }\n    if(this.liveSocket.hasPendingLink() && reason !== \"leave\"){\n      return this.liveSocket.reloadWithJitter(this)\n    }\n    this.destroyAllChildren()\n    this.liveSocket.dropActiveElement(this)\n    // document.activeElement can be null in Internet Explorer 11\n    if(document.activeElement){ document.activeElement.blur() }\n    if(this.liveSocket.isUnloaded()){\n      this.showLoader(BEFORE_UNLOAD_LOADER_TIMEOUT)\n    }\n  }\n\n  onError(reason){\n    this.onClose(reason)\n    if(this.liveSocket.isConnected()){ this.log(\"error\", () => [\"view crashed\", reason]) }\n    if(!this.liveSocket.isUnloaded()){ this.displayError() }\n  }\n\n  displayError(){\n    if(this.isMain()){ DOM.dispatchEvent(window, \"phx:page-loading-start\", {detail: {to: this.href, kind: \"error\"}}) }\n    this.showLoader()\n    this.setContainerClasses(PHX_DISCONNECTED_CLASS, PHX_ERROR_CLASS)\n    this.execAll(this.binding(\"disconnected\"))\n  }\n\n  pushWithReply(refGenerator, event, payload, onReply = function (){ }){\n    if(!this.isConnected()){ return }\n\n    let [ref, [el], opts] = refGenerator ? refGenerator() : [null, [], {}]\n    let onLoadingDone = function(){ }\n    if(opts.page_loading || (el && (el.getAttribute(this.binding(PHX_PAGE_LOADING)) !== null))){\n      onLoadingDone = this.liveSocket.withPageLoading({kind: \"element\", target: el})\n    }\n\n    if(typeof (payload.cid) !== \"number\"){ delete payload.cid }\n    return (\n      this.liveSocket.wrapPush(this, {timeout: true}, () => {\n        return this.channel.push(event, payload, PUSH_TIMEOUT).receive(\"ok\", resp => {\n          let finish = (hookReply) => {\n            if(resp.redirect){ this.onRedirect(resp.redirect) }\n            if(resp.live_patch){ this.onLivePatch(resp.live_patch) }\n            if(resp.live_redirect){ this.onLiveRedirect(resp.live_redirect) }\n            if(ref !== null){ this.undoRefs(ref) }\n            onLoadingDone()\n            onReply(resp, hookReply)\n          }\n          if(resp.diff){\n            this.liveSocket.requestDOMUpdate(() => {\n              this.applyDiff(\"update\", resp.diff, ({diff, reply, events}) => {\n                this.update(diff, events)\n                finish(reply)\n              })\n            })\n          } else {\n            finish(null)\n          }\n        })\n      })\n    )\n  }\n\n  undoRefs(ref){\n    if(!this.isConnected()){ return } // exit if external form triggered\n\n    DOM.all(document, `[${PHX_REF_SRC}=\"${this.id}\"][${PHX_REF}=\"${ref}\"]`, el => {\n      let disabledVal = el.getAttribute(PHX_DISABLED)\n      // remove refs\n      el.removeAttribute(PHX_REF)\n      el.removeAttribute(PHX_REF_SRC)\n      // restore inputs\n      if(el.getAttribute(PHX_READONLY) !== null){\n        el.readOnly = false\n        el.removeAttribute(PHX_READONLY)\n      }\n      if(disabledVal !== null){\n        el.disabled = disabledVal === \"true\" ? true : false\n        el.removeAttribute(PHX_DISABLED)\n      }\n      // remove classes\n      PHX_EVENT_CLASSES.forEach(className => DOM.removeClass(el, className))\n      // restore disables\n      let disableRestore = el.getAttribute(PHX_DISABLE_WITH_RESTORE)\n      if(disableRestore !== null){\n        el.innerText = disableRestore\n        el.removeAttribute(PHX_DISABLE_WITH_RESTORE)\n      }\n      let toEl = DOM.private(el, PHX_REF)\n      if(toEl){\n        let hook = this.triggerBeforeUpdateHook(el, toEl)\n        DOMPatch.patchEl(el, toEl, this.liveSocket.getActiveElement())\n        if(hook){ hook.__updated() }\n        DOM.deletePrivate(el, PHX_REF)\n      }\n    })\n  }\n\n  putRef(elements, event, opts = {}){\n    let newRef = this.ref++\n    let disableWith = this.binding(PHX_DISABLE_WITH)\n    if(opts.loading){ elements = elements.concat(DOM.all(document, opts.loading))}\n\n    elements.forEach(el => {\n      el.classList.add(`phx-${event}-loading`)\n      el.setAttribute(PHX_REF, newRef)\n      el.setAttribute(PHX_REF_SRC, this.el.id)\n      let disableText = el.getAttribute(disableWith)\n      if(disableText !== null){\n        if(!el.getAttribute(PHX_DISABLE_WITH_RESTORE)){\n          el.setAttribute(PHX_DISABLE_WITH_RESTORE, el.innerText)\n        }\n        if(disableText !== \"\"){ el.innerText = disableText }\n        el.setAttribute(\"disabled\", \"\")\n      }\n    })\n    return [newRef, elements, opts]\n  }\n\n  componentID(el){\n    let cid = el.getAttribute && el.getAttribute(PHX_COMPONENT)\n    return cid ? parseInt(cid) : null\n  }\n\n  targetComponentID(target, targetCtx, opts = {}){\n    if(isCid(targetCtx)){ return targetCtx }\n\n    let cidOrSelector = target.getAttribute(this.binding(\"target\"))\n    if(isCid(cidOrSelector)){\n      return parseInt(cidOrSelector)\n    } else if(targetCtx && (cidOrSelector !== null || opts.target)){\n      return this.closestComponentID(targetCtx)\n    } else {\n      return null\n    }\n  }\n\n  closestComponentID(targetCtx){\n    if(isCid(targetCtx)){\n      return targetCtx\n    } else if(targetCtx){\n      return maybe(targetCtx.closest(`[${PHX_COMPONENT}]`), el => this.ownsElement(el) && this.componentID(el))\n    } else {\n      return null\n    }\n  }\n\n  pushHookEvent(targetCtx, event, payload, onReply){\n    if(!this.isConnected()){\n      this.log(\"hook\", () => [\"unable to push hook event. LiveView not connected\", event, payload])\n      return false\n    }\n    let [ref, els, opts] = this.putRef([], \"hook\")\n    this.pushWithReply(() => [ref, els, opts], \"event\", {\n      type: \"hook\",\n      event: event,\n      value: payload,\n      cid: this.closestComponentID(targetCtx)\n    }, (resp, reply) => onReply(reply, ref))\n\n    return ref\n  }\n\n  extractMeta(el, meta, value){\n    let prefix = this.binding(\"value-\")\n    for(let i = 0; i < el.attributes.length; i++){\n      if(!meta){ meta = {} }\n      let name = el.attributes[i].name\n      if(name.startsWith(prefix)){ meta[name.replace(prefix, \"\")] = el.getAttribute(name) }\n    }\n    if(el.value !== undefined){\n      if(!meta){ meta = {} }\n      meta.value = el.value\n\n      if(el.tagName === \"INPUT\" && CHECKABLE_INPUTS.indexOf(el.type) >= 0 && !el.checked){\n        delete meta.value\n      }\n    }\n    if(value){\n      if(!meta){ meta = {} }\n      for(let key in value){ meta[key] = value[key] }\n    }\n    return meta\n  }\n\n  pushEvent(type, el, targetCtx, phxEvent, meta, opts = {}){\n    this.pushWithReply(() => this.putRef([el], type, opts), \"event\", {\n      type: type,\n      event: phxEvent,\n      value: this.extractMeta(el, meta, opts.value),\n      cid: this.targetComponentID(el, targetCtx, opts)\n    })\n  }\n\n  pushFileProgress(fileEl, entryRef, progress, onReply = function (){ }){\n    this.liveSocket.withinOwners(fileEl.form, (view, targetCtx) => {\n      view.pushWithReply(null, \"progress\", {\n        event: fileEl.getAttribute(view.binding(PHX_PROGRESS)),\n        ref: fileEl.getAttribute(PHX_UPLOAD_REF),\n        entry_ref: entryRef,\n        progress: progress,\n        cid: view.targetComponentID(fileEl.form, targetCtx)\n      }, onReply)\n    })\n  }\n\n  pushInput(inputEl, targetCtx, forceCid, phxEvent, opts, callback){\n    let uploads\n    let cid = isCid(forceCid) ? forceCid : this.targetComponentID(inputEl.form, targetCtx)\n    let refGenerator = () => this.putRef([inputEl, inputEl.form], \"change\", opts)\n    let formData\n    if(inputEl.getAttribute(this.binding(\"change\"))){\n      formData = serializeForm(inputEl.form, {_target: opts._target}, [inputEl.name])\n    } else {\n      formData = serializeForm(inputEl.form, {_target: opts._target})\n    }\n    if(DOM.isUploadInput(inputEl) && inputEl.files && inputEl.files.length > 0){\n      LiveUploader.trackFiles(inputEl, Array.from(inputEl.files))\n    }\n    uploads = LiveUploader.serializeUploads(inputEl)\n    let event = {\n      type: \"form\",\n      event: phxEvent,\n      value: formData,\n      uploads: uploads,\n      cid: cid\n    }\n    this.pushWithReply(refGenerator, \"event\", event, resp => {\n      DOM.showError(inputEl, this.liveSocket.binding(PHX_FEEDBACK_FOR))\n      if(DOM.isUploadInput(inputEl) && inputEl.getAttribute(\"data-phx-auto-upload\") !== null){\n        if(LiveUploader.filesAwaitingPreflight(inputEl).length > 0){\n          let [ref, _els] = refGenerator()\n          this.uploadFiles(inputEl.form, targetCtx, ref, cid, (_uploads) => {\n            callback && callback(resp)\n            this.triggerAwaitingSubmit(inputEl.form)\n          })\n        }\n      } else {\n        callback && callback(resp)\n      }\n    })\n  }\n\n  triggerAwaitingSubmit(formEl){\n    let awaitingSubmit = this.getScheduledSubmit(formEl)\n    if(awaitingSubmit){\n      let [_el, _ref, _opts, callback] = awaitingSubmit\n      this.cancelSubmit(formEl)\n      callback()\n    }\n  }\n\n  getScheduledSubmit(formEl){\n    return this.formSubmits.find(([el, _ref, _opts, _callback]) => el.isSameNode(formEl))\n  }\n\n  scheduleSubmit(formEl, ref, opts, callback){\n    if(this.getScheduledSubmit(formEl)){ return true }\n    this.formSubmits.push([formEl, ref, opts, callback])\n  }\n\n  cancelSubmit(formEl){\n    this.formSubmits = this.formSubmits.filter(([el, ref, _callback]) => {\n      if(el.isSameNode(formEl)){\n        this.undoRefs(ref)\n        return false\n      } else {\n        return true\n      }\n    })\n  }\n\n  disableForm(formEl, opts = {}){\n    let filterIgnored = el => {\n      let userIgnored = closestPhxBinding(el, `${this.binding(PHX_UPDATE)}=ignore`, el.form)\n      return !(userIgnored || closestPhxBinding(el, \"data-phx-update=ignore\", el.form))\n    }\n    let filterDisables = el => {\n      return el.hasAttribute(this.binding(PHX_DISABLE_WITH))\n    }\n    let filterButton = el => el.tagName == \"BUTTON\"\n\n    let filterInput = el => [\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(el.tagName)\n\n    let formElements = Array.from(formEl.elements)\n    let disables = formElements.filter(filterDisables)\n    let buttons = formElements.filter(filterButton).filter(filterIgnored)\n    let inputs = formElements.filter(filterInput).filter(filterIgnored)\n\n    buttons.forEach(button => {\n      button.setAttribute(PHX_DISABLED, button.disabled)\n      button.disabled = true\n    })\n    inputs.forEach(input => {\n      input.setAttribute(PHX_READONLY, input.readOnly)\n      input.readOnly = true\n      if(input.files){\n        input.setAttribute(PHX_DISABLED, input.disabled)\n        input.disabled = true\n      }\n    })\n    formEl.setAttribute(this.binding(PHX_PAGE_LOADING), \"\")\n    return this.putRef([formEl].concat(disables).concat(buttons).concat(inputs), \"submit\", opts)\n  }\n\n  pushFormSubmit(formEl, targetCtx, phxEvent, opts, onReply){\n    let refGenerator = () => this.disableForm(formEl, opts)\n    let cid = this.targetComponentID(formEl, targetCtx)\n    if(LiveUploader.hasUploadsInProgress(formEl)){\n      let [ref, _els] = refGenerator()\n      let push = () => this.pushFormSubmit(formEl, targetCtx, phxEvent, opts, onReply)\n      return this.scheduleSubmit(formEl, ref, opts, push)\n    } else if(LiveUploader.inputsAwaitingPreflight(formEl).length > 0){\n      let [ref, els] = refGenerator()\n      let proxyRefGen = () => [ref, els, opts]\n      this.uploadFiles(formEl, targetCtx, ref, cid, (_uploads) => {\n        let formData = serializeForm(formEl, {})\n        this.pushWithReply(proxyRefGen, \"event\", {\n          type: \"form\",\n          event: phxEvent,\n          value: formData,\n          cid: cid\n        }, onReply)\n      })\n    } else {\n      let formData = serializeForm(formEl, {})\n      this.pushWithReply(refGenerator, \"event\", {\n        type: \"form\",\n        event: phxEvent,\n        value: formData,\n        cid: cid\n      }, onReply)\n    }\n  }\n\n  uploadFiles(formEl, targetCtx, ref, cid, onComplete){\n    let joinCountAtUpload = this.joinCount\n    let inputEls = LiveUploader.activeFileInputs(formEl)\n    let numFileInputsInProgress = inputEls.length\n\n    // get each file input\n    inputEls.forEach(inputEl => {\n      let uploader = new LiveUploader(inputEl, this, () => {\n        numFileInputsInProgress--\n        if(numFileInputsInProgress === 0){ onComplete() }\n      });\n\n      this.uploaders[inputEl] = uploader\n      let entries = uploader.entries().map(entry => entry.toPreflightPayload())\n\n      let payload = {\n        ref: inputEl.getAttribute(PHX_UPLOAD_REF),\n        entries: entries,\n        cid: this.targetComponentID(inputEl.form, targetCtx)\n      }\n\n      this.log(\"upload\", () => [\"sending preflight request\", payload])\n\n      this.pushWithReply(null, \"allow_upload\", payload, resp => {\n        this.log(\"upload\", () => [\"got preflight response\", resp])\n        if(resp.error){\n          this.undoRefs(ref)\n          let [entry_ref, reason] = resp.error\n          this.log(\"upload\", () => [`error for entry ${entry_ref}`, reason])\n        } else {\n          let onError = (callback) => {\n            this.channel.onError(() => {\n              if(this.joinCount === joinCountAtUpload){ callback() }\n            })\n          }\n          uploader.initAdapterUpload(resp, onError, this.liveSocket)\n        }\n      })\n    })\n  }\n\n  dispatchUploads(name, filesOrBlobs){\n    let inputs = DOM.findUploadInputs(this.el).filter(el => el.name === name)\n    if(inputs.length === 0){ logError(`no live file inputs found matching the name \"${name}\"`) }\n    else if(inputs.length > 1){ logError(`duplicate live file inputs found matching the name \"${name}\"`) }\n    else { DOM.dispatchEvent(inputs[0], PHX_TRACK_UPLOADS, {detail: {files: filesOrBlobs}}) }\n  }\n\n  pushFormRecovery(form, newCid, callback){\n    this.liveSocket.withinOwners(form, (view, targetCtx) => {\n      let input = form.elements[0]\n      let phxEvent = form.getAttribute(this.binding(PHX_AUTO_RECOVER)) || form.getAttribute(this.binding(\"change\"))\n\n      JS.exec(\"change\", phxEvent, view, input, [\"push\", {_target: input.name, newCid: newCid, callback: callback}])\n    })\n  }\n\n  pushLinkPatch(href, targetEl, callback){\n    let linkRef = this.liveSocket.setPendingLink(href)\n    let refGen = targetEl ? () => this.putRef([targetEl], \"click\") : null\n    let fallback = () => this.liveSocket.redirect(window.location.href)\n\n    let push = this.pushWithReply(refGen, \"live_patch\", {url: href}, resp => {\n      this.liveSocket.requestDOMUpdate(() => {\n        if(resp.link_redirect){\n          this.liveSocket.replaceMain(href, null, callback, linkRef)\n        } else {\n          if(this.liveSocket.commitPendingLink(linkRef)){\n            this.href = href\n          }\n          this.applyPendingUpdates()\n          callback && callback(linkRef)\n        }\n      })\n    })\n\n    if(push){\n      push.receive(\"timeout\", fallback)\n    } else {\n      fallback()\n    }\n  }\n\n  formsForRecovery(html){\n    if(this.joinCount === 0){ return [] }\n\n    let phxChange = this.binding(\"change\")\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n\n    return (\n      DOM.all(this.el, `form[${phxChange}]`)\n        .filter(form => form.id && this.ownsElement(form))\n        .filter(form => form.elements.length > 0)\n        .filter(form => form.getAttribute(this.binding(PHX_AUTO_RECOVER)) !== \"ignore\")\n        .map(form => {\n          let newForm = template.content.querySelector(`form[id=\"${form.id}\"][${phxChange}=\"${form.getAttribute(phxChange)}\"]`)\n          if(newForm){\n            return [form, newForm, this.targetComponentID(newForm)]\n          } else {\n            return [form, null, null]\n          }\n        })\n        .filter(([form, newForm, newCid]) => newForm)\n    )\n  }\n\n  maybePushComponentsDestroyed(destroyedCIDs){\n    let willDestroyCIDs = destroyedCIDs.filter(cid => {\n      return DOM.findComponentNodeList(this.el, cid).length === 0\n    })\n    if(willDestroyCIDs.length > 0){\n      this.pruningCIDs.push(...willDestroyCIDs)\n\n      this.pushWithReply(null, \"cids_will_destroy\", {cids: willDestroyCIDs}, () => {\n        // The cids are either back on the page or they will be fully removed,\n        // so we can remove them from the pruningCIDs.\n        this.pruningCIDs = this.pruningCIDs.filter(cid => willDestroyCIDs.indexOf(cid) !== -1)\n\n        // See if any of the cids we wanted to destroy were added back,\n        // if they were added back, we don't actually destroy them.\n        let completelyDestroyCIDs = willDestroyCIDs.filter(cid => {\n          return DOM.findComponentNodeList(this.el, cid).length === 0\n        })\n\n        if(completelyDestroyCIDs.length > 0){\n          this.pushWithReply(null, \"cids_destroyed\", {cids: completelyDestroyCIDs}, (resp) => {\n            this.rendered.pruneCIDs(resp.cids)\n          })\n        }\n      })\n    }\n  }\n\n  ownsElement(el){\n    return this.isDead || el.getAttribute(PHX_PARENT_ID) === this.id ||\n      maybe(el.closest(PHX_VIEW_SELECTOR), node => node.id) === this.id\n  }\n\n  submitForm(form, targetCtx, phxEvent, opts = {}){\n    DOM.putPrivate(form, PHX_HAS_SUBMITTED, true)\n    let phxFeedback = this.liveSocket.binding(PHX_FEEDBACK_FOR)\n    let inputs = Array.from(form.elements)\n    this.liveSocket.blurActiveElement(this)\n    this.pushFormSubmit(form, targetCtx, phxEvent, opts, () => {\n      inputs.forEach(input => DOM.showError(input, phxFeedback))\n      this.liveSocket.restorePreviouslyActiveFocus()\n    })\n  }\n\n  binding(kind){ return this.liveSocket.binding(kind) }\n}\n", "/** Initializes the LiveSocket\n *\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"wss://example.com/live\"`,\n *                                               `\"/live\"` (inherited host & protocol)\n * @param {Phoenix.Socket} socket - the required Phoenix Socket class imported from \"phoenix\". For example:\n *\n *     import {Socket} from \"phoenix\"\n *     import {LiveSocket} from \"phoenix_live_view\"\n *     let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n *\n * @param {Object} [opts] - Optional configuration. Outside of keys listed below, all\n * configuration is passed directly to the Phoenix Socket constructor.\n * @param {Object} [opts.defaults] - The optional defaults to use for various bindings,\n * such as `phx-debounce`. Supports the following keys:\n *\n *   - debounce - the millisecond phx-debounce time. Defaults 300\n *   - throttle - the millisecond phx-throttle time. Defaults 300\n *\n * @param {Function} [opts.params] - The optional function for passing connect params.\n * The function receives the element associated with a given LiveView. For example:\n *\n *     (el) => {view: el.getAttribute(\"data-my-view-name\", token: window.myToken}\n *\n * @param {string} [opts.bindingPrefix] - The optional prefix to use for all phx DOM annotations.\n * Defaults to \"phx-\".\n * @param {Object} [opts.hooks] - The optional object for referencing LiveView hook callbacks.\n * @param {Object} [opts.uploaders] - The optional object for referencing LiveView uploader callbacks.\n * @param {integer} [opts.loaderTimeout] - The optional delay in milliseconds to wait before apply\n * loading states.\n * @param {integer} [opts.maxReloads] - The maximum reloads before entering failsafe mode.\n * @param {integer} [opts.reloadJitterMin] - The minimum time between normal reload attempts.\n * @param {integer} [opts.reloadJitterMax] - The maximum time between normal reload attempts.\n * @param {integer} [opts.failsafeJitter] - The time between reload attempts in failsafe mode.\n * @param {Function} [opts.viewLogger] - The optional function to log debug information. For example:\n *\n *     (view, kind, msg, obj) => console.log(`${view.id} ${kind}: ${msg} - `, obj)\n *\n * @param {Object} [opts.metadata] - The optional object mapping event names to functions for\n * populating event metadata. For example:\n *\n *     metadata: {\n *       click: (e, el) => {\n *         return {\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           detail: e.detail || 1,\n *         }\n *       },\n *       keydown: (e, el) => {\n *         return {\n *           key: e.key,\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           shiftKey: e.shiftKey\n *         }\n *       }\n *     }\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Useful when LiveView won't have access to `sessionStorage`.  For example, This could\n * happen if a site loads a cross-domain LiveView in an iframe.  Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] || null }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n * @param {Object} [opts.localStorage] - An optional Storage compatible object\n * Useful for when LiveView won't have access to `localStorage`.\n * See `opts.sessionStorage` for examples.\n*/\n\nimport {\n  BINDING_PREFIX,\n  CONSECUTIVE_RELOADS,\n  DEFAULTS,\n  FAILSAFE_JITTER,\n  LOADER_TIMEOUT,\n  MAX_RELOADS,\n  PHX_DEBOUNCE,\n  PHX_DROP_TARGET,\n  PHX_HAS_FOCUSED,\n  PHX_KEY,\n  PHX_LINK_STATE,\n  PHX_LIVE_LINK,\n  PHX_LV_DEBUG,\n  PHX_LV_LATENCY_SIM,\n  PHX_LV_PROFILE,\n  PHX_MAIN,\n  PHX_PARENT_ID,\n  PHX_VIEW_SELECTOR,\n  PHX_ROOT_ID,\n  PHX_THROTTLE,\n  PHX_TRACK_UPLOADS,\n  PHX_SESSION,\n  RELOAD_JITTER_MIN,\n  RELOAD_JITTER_MAX,\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  closure,\n  debug,\n  isObject,\n  maybe\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport Hooks from \"./hooks\"\nimport LiveUploader from \"./live_uploader\"\nimport View from \"./view\"\nimport JS from \"./js\"\n\nexport default class LiveSocket {\n  constructor(url, phxSocket, opts = {}){\n    this.unloaded = false\n    if(!phxSocket || phxSocket.constructor.name === \"Object\"){\n      throw new Error(`\n      a phoenix Socket must be provided as the second argument to the LiveSocket constructor. For example:\n\n          import {Socket} from \"phoenix\"\n          import {LiveSocket} from \"phoenix_live_view\"\n          let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n      `)\n    }\n    this.socket = new phxSocket(url, opts)\n    this.bindingPrefix = opts.bindingPrefix || BINDING_PREFIX\n    this.opts = opts\n    this.params = closure(opts.params || {})\n    this.viewLogger = opts.viewLogger\n    this.metadataCallbacks = opts.metadata || {}\n    this.defaults = Object.assign(clone(DEFAULTS), opts.defaults || {})\n    this.activeElement = null\n    this.prevActive = null\n    this.silenced = false\n    this.main = null\n    this.outgoingMainEl = null\n    this.clickStartedAtTarget = null\n    this.linkRef = 1\n    this.roots = {}\n    this.href = window.location.href\n    this.pendingLink = null\n    this.currentLocation = clone(window.location)\n    this.hooks = opts.hooks || {}\n    this.uploaders = opts.uploaders || {}\n    this.loaderTimeout = opts.loaderTimeout || LOADER_TIMEOUT\n    this.reloadWithJitterTimer = null\n    this.maxReloads = opts.maxReloads || MAX_RELOADS\n    this.reloadJitterMin = opts.reloadJitterMin || RELOAD_JITTER_MIN\n    this.reloadJitterMax = opts.reloadJitterMax || RELOAD_JITTER_MAX\n    this.failsafeJitter = opts.failsafeJitter || FAILSAFE_JITTER\n    this.localStorage = opts.localStorage || window.localStorage\n    this.sessionStorage = opts.sessionStorage || window.sessionStorage\n    this.boundTopLevelEvents = false\n    this.domCallbacks = Object.assign({onNodeAdded: closure(), onBeforeElUpdated: closure()}, opts.dom || {})\n    this.transitions = new TransitionSet()\n    window.addEventListener(\"pagehide\", _e => {\n      this.unloaded = true\n    })\n    this.socket.onOpen(() => {\n      if(this.isUnloaded()){\n        // reload page if being restored from back/forward cache and browser does not emit \"pageshow\"\n        window.location.reload()\n      }\n    })\n  }\n\n  // public\n\n  isProfileEnabled(){ return this.sessionStorage.getItem(PHX_LV_PROFILE) === \"true\" }\n\n  isDebugEnabled(){ return this.sessionStorage.getItem(PHX_LV_DEBUG) === \"true\" }\n\n  isDebugDisabled(){ return this.sessionStorage.getItem(PHX_LV_DEBUG) === \"false\" }\n\n  enableDebug(){ this.sessionStorage.setItem(PHX_LV_DEBUG, \"true\") }\n\n  enableProfiling(){ this.sessionStorage.setItem(PHX_LV_PROFILE, \"true\") }\n\n  disableDebug(){ this.sessionStorage.setItem(PHX_LV_DEBUG, \"false\") }\n\n  disableProfiling(){ this.sessionStorage.removeItem(PHX_LV_PROFILE) }\n\n  enableLatencySim(upperBoundMs){\n    this.enableDebug()\n    console.log(\"latency simulator enabled for the duration of this browser session. Call disableLatencySim() to disable\")\n    this.sessionStorage.setItem(PHX_LV_LATENCY_SIM, upperBoundMs)\n  }\n\n  disableLatencySim(){ this.sessionStorage.removeItem(PHX_LV_LATENCY_SIM) }\n\n  getLatencySim(){\n    let str = this.sessionStorage.getItem(PHX_LV_LATENCY_SIM)\n    return str ? parseInt(str) : null\n  }\n\n  getSocket(){ return this.socket }\n\n  connect(){\n    // enable debug by default if on localhost and not explicitly disabled\n    if(window.location.hostname === \"localhost\" && !this.isDebugDisabled()){ this.enableDebug() }\n    let doConnect = () => {\n      if(this.joinRootViews()){\n        this.bindTopLevelEvents()\n        this.socket.connect()\n      } else if(this.main){\n        this.socket.connect()\n      } else {\n        this.joinDeadView()\n      }\n    }\n    if([\"complete\", \"loaded\", \"interactive\"].indexOf(document.readyState) >= 0){\n      doConnect()\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => doConnect())\n    }\n  }\n\n  disconnect(callback){\n    clearTimeout(this.reloadWithJitterTimer)\n    this.socket.disconnect(callback)\n  }\n\n  replaceTransport(transport){\n    clearTimeout(this.reloadWithJitterTimer)\n    this.socket.replaceTransport(transport)\n    this.connect()\n  }\n\n  execJS(el, encodedJS, eventType = null){\n    this.owner(el, view => JS.exec(eventType, encodedJS, view, el))\n  }\n\n  // private\n\n  triggerDOM(kind, args){ this.domCallbacks[kind](...args) }\n\n  time(name, func){\n    if(!this.isProfileEnabled() || !console.time){ return func() }\n    console.time(name)\n    let result = func()\n    console.timeEnd(name)\n    return result\n  }\n\n  log(view, kind, msgCallback){\n    if(this.viewLogger){\n      let [msg, obj] = msgCallback()\n      this.viewLogger(view, kind, msg, obj)\n    } else if(this.isDebugEnabled()){\n      let [msg, obj] = msgCallback()\n      debug(view, kind, msg, obj)\n    }\n  }\n\n  requestDOMUpdate(callback){\n    this.transitions.after(callback)\n  }\n\n  transition(time, onStart, onDone = function(){}){\n    this.transitions.addTransition(time, onStart, onDone)\n  }\n\n  onChannel(channel, event, cb){\n    channel.on(event, data => {\n      let latency = this.getLatencySim()\n      if(!latency){\n        cb(data)\n      } else {\n        setTimeout(() => cb(data), latency)\n      }\n    })\n  }\n\n  wrapPush(view, opts, push){\n    let latency = this.getLatencySim()\n    let oldJoinCount = view.joinCount\n    if(!latency){\n      if(this.isConnected() && opts.timeout){\n        return push().receive(\"timeout\", () => {\n          if(view.joinCount === oldJoinCount && !view.isDestroyed()){\n            this.reloadWithJitter(view, () => {\n              this.log(view, \"timeout\", () => [\"received timeout while communicating with server. Falling back to hard refresh for recovery\"])\n            })\n          }\n        })\n      } else {\n        return push()\n      }\n    }\n\n    let fakePush = {\n      receives: [],\n      receive(kind, cb){ this.receives.push([kind, cb]) }\n    }\n    setTimeout(() => {\n      if(view.isDestroyed()){ return }\n      fakePush.receives.reduce((acc, [kind, cb]) => acc.receive(kind, cb), push())\n    }, latency)\n    return fakePush\n  }\n\n  reloadWithJitter(view, log){\n    clearTimeout(this.reloadWithJitterTimer)\n    this.disconnect()\n    let minMs = this.reloadJitterMin\n    let maxMs = this.reloadJitterMax\n    let afterMs = Math.floor(Math.random() * (maxMs - minMs + 1)) + minMs\n    let tries = Browser.updateLocal(this.localStorage, window.location.pathname, CONSECUTIVE_RELOADS, 0, count => count + 1)\n    if(tries > this.maxReloads){\n      afterMs = this.failsafeJitter\n    }\n    this.reloadWithJitterTimer = setTimeout(() => {\n      // if view has recovered, such as transport replaced, then cancel\n      if(view.isDestroyed() || view.isConnected()){ return }\n      view.destroy()\n      log ? log() : this.log(view, \"join\", () => [`encountered ${tries} consecutive reloads`])\n      if(tries > this.maxReloads){\n        this.log(view, \"join\", () => [`exceeded ${this.maxReloads} consecutive reloads. Entering failsafe mode`])\n      }\n      if(this.hasPendingLink()){\n        window.location = this.pendingLink\n      } else {\n        window.location.reload()\n      }\n    }, afterMs)\n  }\n\n  getHookCallbacks(name){\n    return name && name.startsWith(\"Phoenix.\") ? Hooks[name.split(\".\")[1]] : this.hooks[name]\n  }\n\n  isUnloaded(){ return this.unloaded }\n\n  isConnected(){ return this.socket.isConnected() }\n\n  getBindingPrefix(){ return this.bindingPrefix }\n\n  binding(kind){ return `${this.getBindingPrefix()}${kind}` }\n\n  channel(topic, params){ return this.socket.channel(topic, params) }\n\n  joinDeadView(){\n    this.bindTopLevelEvents({dead: true})\n    let view = this.newRootView(document.body)\n    view.setHref(this.getHref())\n    view.joinDead()\n    this.main = view\n    window.requestAnimationFrame(() => view.execNewMounted())\n  }\n\n  joinRootViews(){\n    let rootsFound = false\n    DOM.all(document, `${PHX_VIEW_SELECTOR}:not([${PHX_PARENT_ID}])`, rootEl => {\n      if(!this.getRootById(rootEl.id)){\n        let view = this.newRootView(rootEl)\n        view.setHref(this.getHref())\n        view.join()\n        if(rootEl.getAttribute(PHX_MAIN)){ this.main = view }\n      }\n      rootsFound = true\n    })\n    return rootsFound\n  }\n\n  redirect(to, flash){\n    this.disconnect()\n    Browser.redirect(to, flash)\n  }\n\n  replaceMain(href, flash, callback = null, linkRef = this.setPendingLink(href)){\n    let liveReferer = this.currentLocation.href\n    this.outgoingMainEl = this.outgoingMainEl || this.main.el\n    let newMainEl = DOM.cloneNode(this.outgoingMainEl, \"\")\n    this.main.showLoader(this.loaderTimeout)\n    this.main.destroy()\n\n    this.main = this.newRootView(newMainEl, flash, liveReferer)\n    this.main.setRedirect(href)\n    this.transitionRemoves()\n    this.main.join((joinCount, onDone) => {\n      if(joinCount === 1 && this.commitPendingLink(linkRef)){\n        this.requestDOMUpdate(() => {\n          DOM.findPhxSticky(document).forEach(el => newMainEl.appendChild(el))\n          this.outgoingMainEl.replaceWith(newMainEl)\n          this.outgoingMainEl = null\n          callback && requestAnimationFrame(callback)\n          onDone()\n        })\n      }\n    })\n  }\n\n  transitionRemoves(elements){\n    let removeAttr = this.binding(\"remove\")\n    elements = elements || DOM.all(document, `[${removeAttr}]`)\n    elements.forEach(el => {\n      if(document.body.contains(el)){ // skip children already removed\n        this.execJS(el, el.getAttribute(removeAttr), \"remove\")\n      }\n    })\n  }\n\n  isPhxView(el){ return el.getAttribute && el.getAttribute(PHX_SESSION) !== null }\n\n  newRootView(el, flash, liveReferer){\n    let view = new View(el, this, null, flash, liveReferer)\n    this.roots[view.id] = view\n    return view\n  }\n\n  owner(childEl, callback){\n    let view = maybe(childEl.closest(PHX_VIEW_SELECTOR), el => this.getViewByEl(el)) || this.main\n    if(view){ callback(view) }\n  }\n\n  withinOwners(childEl, callback){\n    this.owner(childEl, view => callback(view, childEl))\n  }\n\n  getViewByEl(el){\n    let rootId = el.getAttribute(PHX_ROOT_ID)\n    return maybe(this.getRootById(rootId), root => root.getDescendentByEl(el))\n  }\n\n  getRootById(id){ return this.roots[id] }\n\n  destroyAllViews(){\n    for(let id in this.roots){\n      this.roots[id].destroy()\n      delete this.roots[id]\n    }\n    this.main = null\n  }\n\n  destroyViewByEl(el){\n    let root = this.getRootById(el.getAttribute(PHX_ROOT_ID))\n    if(root && root.id === el.id){\n      root.destroy()\n      delete this.roots[root.id]\n    } else if(root){\n      root.destroyDescendent(el.id)\n    }\n  }\n\n  setActiveElement(target){\n    if(this.activeElement === target){ return }\n    this.activeElement = target\n    let cancel = () => {\n      if(target === this.activeElement){ this.activeElement = null }\n      target.removeEventListener(\"mouseup\", this)\n      target.removeEventListener(\"touchend\", this)\n    }\n    target.addEventListener(\"mouseup\", cancel)\n    target.addEventListener(\"touchend\", cancel)\n  }\n\n  getActiveElement(){\n    if(document.activeElement === document.body){\n      return this.activeElement || document.activeElement\n    } else {\n      // document.activeElement can be null in Internet Explorer 11\n      return document.activeElement || document.body\n    }\n  }\n\n  dropActiveElement(view){\n    if(this.prevActive && view.ownsElement(this.prevActive)){\n      this.prevActive = null\n    }\n  }\n\n  restorePreviouslyActiveFocus(){\n    if(this.prevActive && this.prevActive !== document.body){\n      this.prevActive.focus()\n    }\n  }\n\n  blurActiveElement(){\n    this.prevActive = this.getActiveElement()\n    if(this.prevActive !== document.body){ this.prevActive.blur() }\n  }\n\n  bindTopLevelEvents({dead} = {}){\n    if(this.boundTopLevelEvents){ return }\n\n    this.boundTopLevelEvents = true\n    // enter failsafe reload if server has gone away intentionally, such as \"disconnect\" broadcast\n    this.socket.onClose(event => {\n      if(event && event.code === 1000 && this.main){\n        this.reloadWithJitter(this.main)\n      }\n    })\n    document.body.addEventListener(\"click\", function (){ }) // ensure all click events bubble for mobile Safari\n    window.addEventListener(\"pageshow\", e => {\n      if(e.persisted){ // reload page if being restored from back/forward cache\n        this.getSocket().disconnect()\n        this.withPageLoading({to: window.location.href, kind: \"redirect\"})\n        window.location.reload()\n      }\n    }, true)\n    if(!dead){ this.bindNav() }\n    this.bindClicks()\n    if(!dead){ this.bindForms() }\n    this.bind({keyup: \"keyup\", keydown: \"keydown\"}, (e, type, view, targetEl, phxEvent, eventTarget) => {\n      let matchKey = targetEl.getAttribute(this.binding(PHX_KEY))\n      let pressedKey = e.key && e.key.toLowerCase() // chrome clicked autocompletes send a keydown without key\n      if(matchKey && matchKey.toLowerCase() !== pressedKey){ return }\n\n      let data = {key: e.key, ...this.eventMeta(type, e, targetEl)}\n      JS.exec(type, phxEvent, view, targetEl, [\"push\", {data}])\n    })\n    this.bind({blur: \"focusout\", focus: \"focusin\"}, (e, type, view, targetEl, phxEvent, eventTarget) => {\n      if(!eventTarget){\n        let data = {key: e.key, ...this.eventMeta(type, e, targetEl)}\n        JS.exec(type, phxEvent, view, targetEl, [\"push\", {data}])\n      }\n    })\n    this.bind({blur: \"blur\", focus: \"focus\"}, (e, type, view, targetEl, targetCtx, phxEvent, phxTarget) => {\n      // blur and focus are triggered on document and window. Discard one to avoid dups\n      if(phxTarget === \"window\"){\n        let data = this.eventMeta(type, e, targetEl)\n        JS.exec(type, phxEvent, view, targetEl, [\"push\", {data}])\n      }\n    })\n    window.addEventListener(\"dragover\", e => e.preventDefault())\n    window.addEventListener(\"drop\", e => {\n      e.preventDefault()\n      let dropTargetId = maybe(closestPhxBinding(e.target, this.binding(PHX_DROP_TARGET)), trueTarget => {\n        return trueTarget.getAttribute(this.binding(PHX_DROP_TARGET))\n      })\n      let dropTarget = dropTargetId && document.getElementById(dropTargetId)\n      let files = Array.from(e.dataTransfer.files || [])\n      if(!dropTarget || dropTarget.disabled || files.length === 0 || !(dropTarget.files instanceof FileList)){ return }\n\n      LiveUploader.trackFiles(dropTarget, files)\n      dropTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n    this.on(PHX_TRACK_UPLOADS, e => {\n      let uploadTarget = e.target\n      if(!DOM.isUploadInput(uploadTarget)){ return }\n      let files = Array.from(e.detail.files || []).filter(f => f instanceof File || f instanceof Blob)\n      LiveUploader.trackFiles(uploadTarget, files)\n      uploadTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n  }\n\n  eventMeta(eventName, e, targetEl){\n    let callback = this.metadataCallbacks[eventName]\n    return callback ? callback(e, targetEl) : {}\n  }\n\n  setPendingLink(href){\n    this.linkRef++\n    this.pendingLink = href\n    return this.linkRef\n  }\n\n  commitPendingLink(linkRef){\n    if(this.linkRef !== linkRef){\n      return false\n    } else {\n      this.href = this.pendingLink\n      this.pendingLink = null\n      return true\n    }\n  }\n\n  getHref(){ return this.href }\n\n  hasPendingLink(){ return !!this.pendingLink }\n\n  bind(events, callback){\n    for(let event in events){\n      let browserEventName = events[event]\n\n      this.on(browserEventName, e => {\n        let binding = this.binding(event)\n        let windowBinding = this.binding(`window-${event}`)\n        let targetPhxEvent = e.target.getAttribute && e.target.getAttribute(binding)\n        if(targetPhxEvent){\n          this.debounce(e.target, e, browserEventName, () => {\n            this.withinOwners(e.target, view => {\n              callback(e, event, view, e.target, targetPhxEvent, null)\n            })\n          })\n        } else {\n          DOM.all(document, `[${windowBinding}]`, el => {\n            let phxEvent = el.getAttribute(windowBinding)\n            this.debounce(el, e, browserEventName, () => {\n              this.withinOwners(el, view => {\n                callback(e, event, view, el, phxEvent, \"window\")\n              })\n            })\n          })\n        }\n      })\n    }\n  }\n\n  bindClicks(){\n    window.addEventListener(\"mousedown\", e => this.clickStartedAtTarget = e.target)\n    this.bindClick(\"click\", \"click\", false)\n    this.bindClick(\"mousedown\", \"capture-click\", true)\n  }\n\n  bindClick(eventName, bindingName, capture){\n    let click = this.binding(bindingName)\n    window.addEventListener(eventName, e => {\n      let target = null\n      if(capture){\n        target = e.target.matches(`[${click}]`) ? e.target : e.target.querySelector(`[${click}]`)\n      } else {\n        let clickStartedAtTarget = this.clickStartedAtTarget || e.target\n        target = closestPhxBinding(clickStartedAtTarget, click)\n        this.dispatchClickAway(e, clickStartedAtTarget)\n        this.clickStartedAtTarget = null\n      }\n      let phxEvent = target && target.getAttribute(click)\n      if(!phxEvent){ return }\n      if(target.getAttribute(\"href\") === \"#\"){ e.preventDefault() }\n\n      this.debounce(target, e, \"click\", () => {\n        this.withinOwners(target, view => {\n          JS.exec(\"click\", phxEvent, view, target, [\"push\", {data: this.eventMeta(\"click\", e, target)}])\n        })\n      })\n    }, capture)\n  }\n\n  dispatchClickAway(e, clickStartedAt){\n    let phxClickAway = this.binding(\"click-away\")\n    DOM.all(document, `[${phxClickAway}]`, el => {\n      if(!(el.isSameNode(clickStartedAt) || el.contains(clickStartedAt))){\n        this.withinOwners(e.target, view => {\n          let phxEvent = el.getAttribute(phxClickAway)\n          if(JS.isVisible(el)){\n            JS.exec(\"click\", phxEvent, view, el, [\"push\", {data: this.eventMeta(\"click\", e, e.target)}])\n          }\n        })\n      }\n    })\n  }\n\n  bindNav(){\n    if(!Browser.canPushState()){ return }\n    if(history.scrollRestoration){ history.scrollRestoration = \"manual\" }\n    let scrollTimer = null\n    window.addEventListener(\"scroll\", _e => {\n      clearTimeout(scrollTimer)\n      scrollTimer = setTimeout(() => {\n        Browser.updateCurrentState(state => Object.assign(state, {scroll: window.scrollY}))\n      }, 100)\n    })\n    window.addEventListener(\"popstate\", event => {\n      if(!this.registerNewLocation(window.location)){ return }\n      let {type, id, root, scroll} = event.state || {}\n      let href = window.location.href\n\n      this.requestDOMUpdate(() => {\n        if(this.main.isConnected() && (type === \"patch\" && id === this.main.id)){\n          this.main.pushLinkPatch(href, null)\n        } else {\n          this.replaceMain(href, null, () => {\n            if(root){ this.replaceRootHistory() }\n            if(typeof(scroll) === \"number\"){\n              setTimeout(() => {\n                window.scrollTo(0, scroll)\n              }, 0) // the body needs to render before we scroll.\n            }\n          })\n        }\n      })\n    }, false)\n    window.addEventListener(\"click\", e => {\n      let target = closestPhxBinding(e.target, PHX_LIVE_LINK)\n      let type = target && target.getAttribute(PHX_LIVE_LINK)\n      let wantsNewTab = e.metaKey || e.ctrlKey || e.button === 1\n      if(!type || !this.isConnected() || !this.main || wantsNewTab){ return }\n\n      let href = target.href\n      let linkState = target.getAttribute(PHX_LINK_STATE)\n      e.preventDefault()\n      e.stopImmediatePropagation() // do not bubble click to regular phx-click bindings\n      if(this.pendingLink === href){ return }\n\n      this.requestDOMUpdate(() => {\n        if(type === \"patch\"){\n          this.pushHistoryPatch(href, linkState, target)\n        } else if(type === \"redirect\"){\n          this.historyRedirect(href, linkState)\n        } else {\n          throw new Error(`expected ${PHX_LIVE_LINK} to be \"patch\" or \"redirect\", got: ${type}`)\n        }\n        let phxClick = target.getAttribute(this.binding(\"click\"))\n        if(phxClick){\n          this.requestDOMUpdate(() => this.execJS(target, phxClick, \"click\"))\n        }\n      })\n    }, false)\n  }\n\n  dispatchEvent(event, payload = {}){\n    DOM.dispatchEvent(window, `phx:${event}`, {detail: payload})\n  }\n\n  dispatchEvents(events){\n    events.forEach(([event, payload]) => this.dispatchEvent(event, payload))\n  }\n\n  withPageLoading(info, callback){\n    DOM.dispatchEvent(window, \"phx:page-loading-start\", {detail: info})\n    let done = () => DOM.dispatchEvent(window, \"phx:page-loading-stop\", {detail: info})\n    return callback ? callback(done) : done\n  }\n\n  pushHistoryPatch(href, linkState, targetEl){\n    if(!this.isConnected()){ return Browser.redirect(href) }\n\n    this.withPageLoading({to: href, kind: \"patch\"}, done => {\n      this.main.pushLinkPatch(href, targetEl, linkRef => {\n        this.historyPatch(href, linkState, linkRef)\n        done()\n      })\n    })\n  }\n\n  historyPatch(href, linkState, linkRef = this.setPendingLink(href)){\n    if(!this.commitPendingLink(linkRef)){ return }\n\n    Browser.pushState(linkState, {type: \"patch\", id: this.main.id}, href)\n    this.registerNewLocation(window.location)\n  }\n\n  historyRedirect(href, linkState, flash){\n    // convert to full href if only path prefix\n    if(!this.isConnected()){ return Browser.redirect(href, flash) }\n    if(/^\\/[^\\/]+.*$/.test(href)){\n      let {protocol, host} = window.location\n      href = `${protocol}//${host}${href}`\n    }\n    let scroll = window.scrollY\n    this.withPageLoading({to: href, kind: \"redirect\"}, done => {\n      this.replaceMain(href, flash, () => {\n        Browser.pushState(linkState, {type: \"redirect\", id: this.main.id, scroll: scroll}, href)\n        this.registerNewLocation(window.location)\n        done()\n      })\n    })\n  }\n\n  replaceRootHistory(){\n    Browser.pushState(\"replace\", {root: true, type: \"patch\", id: this.main.id})\n  }\n\n  registerNewLocation(newLocation){\n    let {pathname, search} = this.currentLocation\n    if(pathname + search === newLocation.pathname + newLocation.search){\n      return false\n    } else {\n      this.currentLocation = clone(newLocation)\n      return true\n    }\n  }\n\n  bindForms(){\n    let iterations = 0\n    let externalFormSubmitted = false\n\n    // disable forms on submit that track phx-change but perform external submit\n    this.on(\"submit\", e => {\n      let phxSubmit = e.target.getAttribute(this.binding(\"submit\"))\n      let phxChange = e.target.getAttribute(this.binding(\"change\"))\n      if(!externalFormSubmitted && phxChange && !phxSubmit){\n        externalFormSubmitted = true\n        e.preventDefault()\n        this.withinOwners(e.target, view => {\n          view.disableForm(e.target)\n          window.requestAnimationFrame(() => e.target.submit()) // safari needs next tick\n        })\n      }\n    }, true)\n\n    this.on(\"submit\", e => {\n      let phxEvent = e.target.getAttribute(this.binding(\"submit\"))\n      if(!phxEvent){ return }\n      e.preventDefault()\n      e.target.disabled = true\n      this.withinOwners(e.target, view => {\n        JS.exec(\"submit\", phxEvent, view, e.target, [\"push\", {}])\n      })\n    }, false)\n\n    for(let type of [\"change\", \"input\"]){\n      this.on(type, e => {\n        let phxChange = this.binding(\"change\")\n        let input = e.target\n        let inputEvent = input.getAttribute(phxChange)\n        let formEvent = input.form && input.form.getAttribute(phxChange)\n        let phxEvent = inputEvent || formEvent\n        if(!phxEvent){ return }\n        if(input.type === \"number\" && input.validity && input.validity.badInput){ return }\n\n        let dispatcher = inputEvent ? input : input.form\n        let currentIterations = iterations\n        iterations++\n        let {at: at, type: lastType} = DOM.private(input, \"prev-iteration\") || {}\n        // detect dup because some browsers dispatch both \"input\" and \"change\"\n        if(at === currentIterations - 1 && type !== lastType){ return }\n\n        DOM.putPrivate(input, \"prev-iteration\", {at: currentIterations, type: type})\n\n        this.debounce(input, e, type, () => {\n          this.withinOwners(dispatcher, view => {\n            DOM.putPrivate(input, PHX_HAS_FOCUSED, true)\n            if(!DOM.isTextualInput(input)){\n              this.setActiveElement(input)\n            }\n            JS.exec(\"change\", phxEvent, view, input, [\"push\", {_target: e.target.name, dispatcher: dispatcher}])\n          })\n        })\n      }, false)\n    }\n  }\n\n  debounce(el, event, eventType, callback){\n    if(eventType === \"blur\" || eventType === \"focusout\"){ return callback() }\n\n    let phxDebounce = this.binding(PHX_DEBOUNCE)\n    let phxThrottle = this.binding(PHX_THROTTLE)\n    let defaultDebounce = this.defaults.debounce.toString()\n    let defaultThrottle = this.defaults.throttle.toString()\n\n    this.withinOwners(el, view => {\n      let asyncFilter = () => !view.isDestroyed() && document.body.contains(el)\n      DOM.debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, asyncFilter, () => {\n        callback()\n      })\n    })\n  }\n\n  silenceEvents(callback){\n    this.silenced = true\n    callback()\n    this.silenced = false\n  }\n\n  on(event, callback){\n    window.addEventListener(event, e => {\n      if(!this.silenced){ callback(e) }\n    })\n  }\n}\n\nclass TransitionSet {\n  constructor(){\n    this.transitions = new Set()\n    this.pendingOps = []\n    this.reset()\n  }\n\n  reset(){\n    this.transitions.forEach(timer => {\n      clearTimeout(timer)\n      this.transitions.delete(timer)\n    })\n    this.flushPendingOps()\n  }\n\n  after(callback){\n    if(this.size() === 0){\n      callback()\n    } else {\n      this.pushPendingOp(callback)\n    }\n  }\n\n  addTransition(time, onStart, onDone){\n    onStart()\n    let timer = setTimeout(() => {\n      this.transitions.delete(timer)\n      onDone()\n      if(this.size() === 0){ this.flushPendingOps() }\n    }, time)\n    this.transitions.add(timer)\n  }\n\n  pushPendingOp(op){ this.pendingOps.push(op) }\n\n  size(){ return this.transitions.size }\n\n  flushPendingOps(){\n    this.pendingOps.forEach(op => op())\n    this.pendingOps = []\n  }\n}\n"],
  "mappings": "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",
  "names": ["NProgress", "closure2", "url", "CustomEvent", "liveSocket", "closure", "url", "Hooks", "NProgress"]
}
